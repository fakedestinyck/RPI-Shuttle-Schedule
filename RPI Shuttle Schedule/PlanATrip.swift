//
//  PlanATrip.swift
//
//  Created on 9/8/17.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

import UIKit



public class PlanATrip: NSObject {
    
    static var rectangle2:UIBezierPath!
    static var tOMORROW = NSMutableAttributedString(string: "TOMORROW")
    static let staticScale = min(UIScreen.main.bounds.width/375.0, UIScreen.main.bounds.height/630.0)
    
    
    
    class func searchTap(sender: UITapGestureRecognizer) {
        print("true1")
        let tapLocation:CGPoint = sender.location(in: sender.view)
        PlanATripViewController.hitTest(tapLocation: CGPoint(x: tapLocation.x-staticScale*16, y: tapLocation.y-staticScale*71))
        
    }
    
    
    //MARK: - Canvas Drawings
    
    /// Page 1
    
    class func drawSearch1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.height), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        let baseTransform = context.userSpaceToDeviceSpaceTransform.inverted()
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 375, height: 630), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 375, y: resizedFrame.height / 630)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 375, resizedFrame.height / 630)
        
        /// Background Color
        UIColor(white: 0.992, alpha: 1).setFill()
        context.fill(context.boundingBoxOfClipPath)
        
        /// shutterstock_532100086
        do {
            context.saveGState()
            context.translateBy(x: -33, y: 401)
            
            /// Group 5
            do {
                context.saveGState()
                context.translateBy(x: -0, y: 0)
                
                /// Fill 1
                let fill1 = UIBezierPath()
                fill1.move(to: CGPoint(x: 0, y: 241.83))
                fill1.addLine(to: CGPoint(x: 440.81, y: 241.83))
                fill1.addLine(to: CGPoint(x: 440.81, y: 0))
                fill1.addLine(to: CGPoint.zero)
                fill1.addLine(to: CGPoint(x: 0, y: 241.83))
                fill1.close()
                fill1.move(to: CGPoint(x: 0, y: 241.83))
                context.saveGState()
                context.translateBy(x: 0.01, y: 0.16)
                fill1.usesEvenOddFillRule = true
                UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
                fill1.fill()
                context.restoreGState()
                
                /// Fill 3
                let fill3 = UIBezierPath()
                fill3.move(to: CGPoint(x: 24.14, y: 33.86))
                fill3.addCurve(to: CGPoint(x: 17.05, y: 70.37), controlPoint1: CGPoint(x: 26.65, y: 53.29), controlPoint2: CGPoint(x: 23.47, y: 69.63))
                fill3.addCurve(to: CGPoint(x: 0.86, y: 36.53), controlPoint1: CGPoint(x: 10.62, y: 71.1), controlPoint2: CGPoint(x: 3.37, y: 55.95))
                fill3.addCurve(to: CGPoint(x: 7.95, y: 0.03), controlPoint1: CGPoint(x: -1.65, y: 17.1), controlPoint2: CGPoint(x: 1.52, y: 0.76))
                fill3.addCurve(to: CGPoint(x: 24.14, y: 33.86), controlPoint1: CGPoint(x: 14.38, y: -0.71), controlPoint2: CGPoint(x: 21.62, y: 14.44))
                context.saveGState()
                context.translateBy(x: 71.96, y: 95.84)
                fill3.usesEvenOddFillRule = true
                UIColor(hue: 0.414, saturation: 0.088, brightness: 0.927, alpha: 1).setFill()
                fill3.fill()
                context.restoreGState()
                
                /// Fill 4
                let fill4 = UIBezierPath()
                fill4.move(to: CGPoint(x: 259.17, y: 76.99))
                fill4.addCurve(to: CGPoint(x: 209.17, y: 34.3), controlPoint1: CGPoint(x: 259.17, y: 76.99), controlPoint2: CGPoint(x: 253.88, y: 45.17))
                fill4.addCurve(to: CGPoint(x: 105.4, y: 7.78), controlPoint1: CGPoint(x: 164.46, y: 23.42), controlPoint2: CGPoint(x: 114.38, y: 13.64))
                fill4.addCurve(to: CGPoint(x: 22.23, y: 15.33), controlPoint1: CGPoint(x: 96.41, y: 1.92), controlPoint2: CGPoint(x: 49.68, y: -9.51))
                fill4.addCurve(to: CGPoint(x: 2.65, y: 76.99), controlPoint1: CGPoint(x: -5.23, y: 40.17), controlPoint2: CGPoint(x: -0.97, y: 63.91))
                fill4.addCurve(to: CGPoint(x: 7.7, y: 140.07), controlPoint1: CGPoint(x: 6.26, y: 90.07), controlPoint2: CGPoint(x: 15.86, y: 117.1))
                fill4.addCurve(to: CGPoint(x: 109.38, y: 187.37), controlPoint1: CGPoint(x: -0.45, y: 163.03), controlPoint2: CGPoint(x: 11.88, y: 217.31))
                fill4.addCurve(to: CGPoint(x: 203.54, y: 145.72), controlPoint1: CGPoint(x: 206.88, y: 157.43), controlPoint2: CGPoint(x: 170.65, y: 159.97))
                fill4.addCurve(to: CGPoint(x: 259.17, y: 76.99), controlPoint1: CGPoint(x: 236.44, y: 131.47), controlPoint2: CGPoint(x: 271.4, y: 105.36))
                context.saveGState()
                context.translateBy(x: 98.08, y: 27.66)
                fill4.usesEvenOddFillRule = true
                UIColor(hue: 0.414, saturation: 0.088, brightness: 0.927, alpha: 1).setFill()
                fill4.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// Fill 6
            let fill6 = UIBezierPath()
            fill6.move(to: CGPoint(x: 80.47, y: 14.5))
            fill6.addCurve(to: CGPoint(x: 39.24, y: 18.56), controlPoint1: CGPoint(x: 79.92, y: 19.31), controlPoint2: CGPoint(x: 61.46, y: 21.13))
            fill6.addCurve(to: CGPoint(x: 0.01, y: 5.22), controlPoint1: CGPoint(x: 17.02, y: 16), controlPoint2: CGPoint(x: -0.54, y: 10.03))
            fill6.addCurve(to: CGPoint(x: 41.25, y: 1.16), controlPoint1: CGPoint(x: 0.57, y: 0.42), controlPoint2: CGPoint(x: 19.03, y: -1.4))
            fill6.addCurve(to: CGPoint(x: 80.47, y: 14.5), controlPoint1: CGPoint(x: 63.47, y: 3.73), controlPoint2: CGPoint(x: 81.03, y: 9.7))
            context.saveGState()
            context.translateBy(x: 216.1, y: 31.83)
            fill6.usesEvenOddFillRule = true
            UIColor(hue: 0.414, saturation: 0.088, brightness: 0.927, alpha: 1).setFill()
            fill6.fill()
            context.restoreGState()
            
            /// Fill 7
            let fill7 = UIBezierPath()
            fill7.move(to: CGPoint(x: 79.92, y: 32.96))
            fill7.addCurve(to: CGPoint(x: 79.9, y: 33.71), controlPoint1: CGPoint(x: 79.92, y: 33.21), controlPoint2: CGPoint(x: 79.91, y: 33.46))
            fill7.addLine(to: CGPoint(x: 0, y: 33.71))
            fill7.addCurve(to: CGPoint(x: 0, y: 33.46), controlPoint1: CGPoint(x: 0, y: 33.63), controlPoint2: CGPoint(x: 0, y: 33.55))
            fill7.addCurve(to: CGPoint(x: 10.73, y: 23.16), controlPoint1: CGPoint(x: 0, y: 27.77), controlPoint2: CGPoint(x: 4.8, y: 23.16))
            fill7.addCurve(to: CGPoint(x: 13.68, y: 23.56), controlPoint1: CGPoint(x: 11.76, y: 23.16), controlPoint2: CGPoint(x: 12.75, y: 23.3))
            fill7.addCurve(to: CGPoint(x: 13.65, y: 22.35), controlPoint1: CGPoint(x: 13.66, y: 23.16), controlPoint2: CGPoint(x: 13.65, y: 22.75))
            fill7.addCurve(to: CGPoint(x: 36.93, y: 0), controlPoint1: CGPoint(x: 13.65, y: 10), controlPoint2: CGPoint(x: 24.07, y: 0))
            fill7.addCurve(to: CGPoint(x: 59.71, y: 17.75), controlPoint1: CGPoint(x: 48.14, y: 0), controlPoint2: CGPoint(x: 57.5, y: 7.62))
            fill7.addCurve(to: CGPoint(x: 63.61, y: 17.3), controlPoint1: CGPoint(x: 60.96, y: 17.46), controlPoint2: CGPoint(x: 62.26, y: 17.3))
            fill7.addCurve(to: CGPoint(x: 79.92, y: 32.96), controlPoint1: CGPoint(x: 72.61, y: 17.3), controlPoint2: CGPoint(x: 79.92, y: 24.31))
            context.saveGState()
            context.translateBy(x: 87.51, y: 53.48)
            fill7.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill7.fill()
            context.restoreGState()
            
            /// Fill 8
            let fill8 = UIBezierPath()
            fill8.move(to: CGPoint(x: 2.72, y: 33.71))
            fill8.addLine(to: CGPoint(x: 79.91, y: 33.71))
            fill8.addCurve(to: CGPoint(x: 64.93, y: 19.95), controlPoint1: CGPoint(x: 79.59, y: 26.07), controlPoint2: CGPoint(x: 73, y: 19.95))
            fill8.addCurve(to: CGPoint(x: 61.34, y: 20.37), controlPoint1: CGPoint(x: 63.72, y: 19.95), controlPoint2: CGPoint(x: 62.51, y: 20.09))
            fill8.addCurve(to: CGPoint(x: 60.33, y: 20.2), controlPoint1: CGPoint(x: 61, y: 20.45), controlPoint2: CGPoint(x: 60.63, y: 20.39))
            fill8.addCurve(to: CGPoint(x: 59.74, y: 19.36), controlPoint1: CGPoint(x: 60.03, y: 20.01), controlPoint2: CGPoint(x: 59.82, y: 19.71))
            fill8.addCurve(to: CGPoint(x: 38.25, y: 2.65), controlPoint1: CGPoint(x: 57.63, y: 9.68), controlPoint2: CGPoint(x: 48.6, y: 2.65))
            fill8.addCurve(to: CGPoint(x: 16.3, y: 23.67), controlPoint1: CGPoint(x: 26.15, y: 2.65), controlPoint2: CGPoint(x: 16.3, y: 12.08))
            fill8.addCurve(to: CGPoint(x: 16.33, y: 24.81), controlPoint1: CGPoint(x: 16.3, y: 24.03), controlPoint2: CGPoint(x: 16.31, y: 24.41))
            fill8.addCurve(to: CGPoint(x: 15.84, y: 25.91), controlPoint1: CGPoint(x: 16.36, y: 25.23), controlPoint2: CGPoint(x: 16.17, y: 25.65))
            fill8.addCurve(to: CGPoint(x: 14.66, y: 26.16), controlPoint1: CGPoint(x: 15.51, y: 26.18), controlPoint2: CGPoint(x: 15.07, y: 26.27))
            fill8.addCurve(to: CGPoint(x: 12.06, y: 25.81), controlPoint1: CGPoint(x: 13.81, y: 25.93), controlPoint2: CGPoint(x: 12.94, y: 25.81))
            fill8.addCurve(to: CGPoint(x: 2.72, y: 33.71), controlPoint1: CGPoint(x: 7.25, y: 25.81), controlPoint2: CGPoint(x: 3.28, y: 29.27))
            fill8.close()
            fill8.move(to: CGPoint(x: 81.22, y: 36.36))
            fill8.addLine(to: CGPoint(x: 1.33, y: 36.36))
            fill8.addCurve(to: CGPoint(x: 0, y: 35.09), controlPoint1: CGPoint(x: 0.62, y: 36.36), controlPoint2: CGPoint(x: 0.03, y: 35.8))
            fill8.addCurve(to: CGPoint(x: 0, y: 34.79), controlPoint1: CGPoint(x: 0, y: 34.99), controlPoint2: CGPoint(x: 0, y: 34.89))
            fill8.addCurve(to: CGPoint(x: 12.06, y: 23.16), controlPoint1: CGPoint(x: 0, y: 28.37), controlPoint2: CGPoint(x: 5.41, y: 23.16))
            fill8.addCurve(to: CGPoint(x: 13.65, y: 23.26), controlPoint1: CGPoint(x: 12.59, y: 23.16), controlPoint2: CGPoint(x: 13.12, y: 23.19))
            fill8.addCurve(to: CGPoint(x: 38.25, y: 0), controlPoint1: CGPoint(x: 13.88, y: 10.4), controlPoint2: CGPoint(x: 24.83, y: 0))
            fill8.addCurve(to: CGPoint(x: 53.84, y: 5.36), controlPoint1: CGPoint(x: 43.93, y: 0), controlPoint2: CGPoint(x: 49.46, y: 1.9))
            fill8.addCurve(to: CGPoint(x: 62.02, y: 17.53), controlPoint1: CGPoint(x: 57.82, y: 8.5), controlPoint2: CGPoint(x: 60.69, y: 12.79))
            fill8.addCurve(to: CGPoint(x: 64.93, y: 17.3), controlPoint1: CGPoint(x: 62.98, y: 17.38), controlPoint2: CGPoint(x: 63.96, y: 17.3))
            fill8.addCurve(to: CGPoint(x: 82.57, y: 34.28), controlPoint1: CGPoint(x: 74.66, y: 17.3), controlPoint2: CGPoint(x: 82.57, y: 24.92))
            fill8.addCurve(to: CGPoint(x: 82.55, y: 35.1), controlPoint1: CGPoint(x: 82.57, y: 34.56), controlPoint2: CGPoint(x: 82.56, y: 34.83))
            fill8.addCurve(to: CGPoint(x: 81.22, y: 36.36), controlPoint1: CGPoint(x: 82.51, y: 35.81), controlPoint2: CGPoint(x: 81.93, y: 36.36))
            fill8.addLine(to: CGPoint(x: 81.22, y: 36.36))
            fill8.close()
            fill8.move(to: CGPoint(x: 81.22, y: 36.36))
            context.saveGState()
            context.translateBy(x: 86.19, y: 52.16)
            fill8.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill8.fill()
            context.restoreGState()
            
            /// Fill 9
            let fill9 = UIBezierPath()
            fill9.move(to: CGPoint(x: 53.37, y: 0))
            fill9.addLine(to: CGPoint.zero)
            context.saveGState()
            context.translateBy(x: 136.07, y: 87.2)
            fill9.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill9.fill()
            context.restoreGState()
            
            /// Fill 10
            let fill10 = UIBezierPath()
            fill10.move(to: CGPoint(x: 54.69, y: 2.65))
            fill10.addLine(to: CGPoint(x: 1.33, y: 2.65))
            fill10.addCurve(to: CGPoint(x: 0, y: 1.32), controlPoint1: CGPoint(x: 0.59, y: 2.65), controlPoint2: CGPoint(x: 0, y: 2.06))
            fill10.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill10.addLine(to: CGPoint(x: 54.69, y: 0))
            fill10.addCurve(to: CGPoint(x: 56.02, y: 1.32), controlPoint1: CGPoint(x: 55.42, y: 0), controlPoint2: CGPoint(x: 56.02, y: 0.59))
            fill10.addCurve(to: CGPoint(x: 54.69, y: 2.65), controlPoint1: CGPoint(x: 56.02, y: 2.06), controlPoint2: CGPoint(x: 55.42, y: 2.65))
            context.saveGState()
            context.translateBy(x: 134.74, y: 85.87)
            fill10.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill10.fill()
            context.restoreGState()
            
            /// Fill 11
            let fill11 = UIBezierPath()
            fill11.move(to: CGPoint.zero)
            fill11.addCurve(to: CGPoint(x: 1.2, y: 5.63), controlPoint1: CGPoint.zero, controlPoint2: CGPoint(x: 1.2, y: 4.87))
            context.saveGState()
            context.translateBy(x: 146.64, y: 69.11)
            fill11.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill11.fill()
            context.restoreGState()
            
            /// Fill 12
            let fill12 = UIBezierPath()
            fill12.move(to: CGPoint(x: 2.53, y: 8.28))
            fill12.addCurve(to: CGPoint(x: 1.2, y: 6.96), controlPoint1: CGPoint(x: 1.8, y: 8.28), controlPoint2: CGPoint(x: 1.2, y: 7.69))
            fill12.addCurve(to: CGPoint(x: 0.04, y: 1.64), controlPoint1: CGPoint(x: 1.18, y: 6.5), controlPoint2: CGPoint(x: 0.58, y: 3.84))
            fill12.addCurve(to: CGPoint(x: 1.01, y: 0.04), controlPoint1: CGPoint(x: -0.14, y: 0.93), controlPoint2: CGPoint(x: 0.3, y: 0.21))
            fill12.addCurve(to: CGPoint(x: 2.61, y: 1.01), controlPoint1: CGPoint(x: 1.72, y: -0.14), controlPoint2: CGPoint(x: 2.44, y: 0.3))
            fill12.addCurve(to: CGPoint(x: 3.86, y: 6.96), controlPoint1: CGPoint(x: 3.08, y: 2.89), controlPoint2: CGPoint(x: 3.86, y: 6.16))
            fill12.addCurve(to: CGPoint(x: 2.53, y: 8.28), controlPoint1: CGPoint(x: 3.86, y: 7.69), controlPoint2: CGPoint(x: 3.26, y: 8.28))
            context.saveGState()
            context.translateBy(x: 145.32, y: 67.79)
            fill12.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill12.fill()
            context.restoreGState()
            
            /// Fill 13
            let fill13 = UIBezierPath()
            fill13.move(to: CGPoint(x: 46.53, y: 20.07))
            fill13.addCurve(to: CGPoint(x: 46.52, y: 20.53), controlPoint1: CGPoint(x: 46.53, y: 20.23), controlPoint2: CGPoint(x: 46.53, y: 20.38))
            fill13.addLine(to: CGPoint(x: 0, y: 20.53))
            fill13.addCurve(to: CGPoint(x: 0, y: 20.38), controlPoint1: CGPoint(x: 0, y: 20.48), controlPoint2: CGPoint(x: 0, y: 20.43))
            fill13.addCurve(to: CGPoint(x: 6.25, y: 14.11), controlPoint1: CGPoint(x: 0, y: 16.91), controlPoint2: CGPoint(x: 2.8, y: 14.11))
            fill13.addCurve(to: CGPoint(x: 7.97, y: 14.35), controlPoint1: CGPoint(x: 6.85, y: 14.11), controlPoint2: CGPoint(x: 7.42, y: 14.19))
            fill13.addCurve(to: CGPoint(x: 7.95, y: 13.61), controlPoint1: CGPoint(x: 7.96, y: 14.1), controlPoint2: CGPoint(x: 7.95, y: 13.86))
            fill13.addCurve(to: CGPoint(x: 21.5, y: 0), controlPoint1: CGPoint(x: 7.95, y: 6.09), controlPoint2: CGPoint(x: 14.02, y: 0))
            fill13.addCurve(to: CGPoint(x: 34.77, y: 10.81), controlPoint1: CGPoint(x: 28.03, y: 0), controlPoint2: CGPoint(x: 33.48, y: 4.64))
            fill13.addCurve(to: CGPoint(x: 37.04, y: 10.54), controlPoint1: CGPoint(x: 35.5, y: 10.63), controlPoint2: CGPoint(x: 36.26, y: 10.54))
            fill13.addCurve(to: CGPoint(x: 46.53, y: 20.07), controlPoint1: CGPoint(x: 42.28, y: 10.54), controlPoint2: CGPoint(x: 46.53, y: 14.81))
            context.saveGState()
            context.translateBy(x: 237.92, y: 44.86)
            fill13.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill13.fill()
            context.restoreGState()
            
            /// Fill 14
            let fill14 = UIBezierPath()
            fill14.move(to: CGPoint(x: 2.79, y: 20.53))
            fill14.addLine(to: CGPoint(x: 46.49, y: 20.53))
            fill14.addCurve(to: CGPoint(x: 38.36, y: 13.19), controlPoint1: CGPoint(x: 46.06, y: 16.41), controlPoint2: CGPoint(x: 42.58, y: 13.19))
            fill14.addCurve(to: CGPoint(x: 36.41, y: 13.42), controlPoint1: CGPoint(x: 37.71, y: 13.19), controlPoint2: CGPoint(x: 37.05, y: 13.27))
            fill14.addCurve(to: CGPoint(x: 35.39, y: 13.26), controlPoint1: CGPoint(x: 36.06, y: 13.51), controlPoint2: CGPoint(x: 35.69, y: 13.45))
            fill14.addCurve(to: CGPoint(x: 34.8, y: 12.41), controlPoint1: CGPoint(x: 35.08, y: 13.07), controlPoint2: CGPoint(x: 34.87, y: 12.76))
            fill14.addCurve(to: CGPoint(x: 22.83, y: 2.65), controlPoint1: CGPoint(x: 33.62, y: 6.75), controlPoint2: CGPoint(x: 28.59, y: 2.65))
            fill14.addCurve(to: CGPoint(x: 10.6, y: 14.94), controlPoint1: CGPoint(x: 16.08, y: 2.65), controlPoint2: CGPoint(x: 10.6, y: 8.16))
            fill14.addCurve(to: CGPoint(x: 10.62, y: 15.6), controlPoint1: CGPoint(x: 10.6, y: 15.15), controlPoint2: CGPoint(x: 10.61, y: 15.37))
            fill14.addCurve(to: CGPoint(x: 10.12, y: 16.71), controlPoint1: CGPoint(x: 10.64, y: 16.03), controlPoint2: CGPoint(x: 10.45, y: 16.44))
            fill14.addCurve(to: CGPoint(x: 8.93, y: 16.95), controlPoint1: CGPoint(x: 9.78, y: 16.98), controlPoint2: CGPoint(x: 9.34, y: 17.06))
            fill14.addCurve(to: CGPoint(x: 7.58, y: 16.75), controlPoint1: CGPoint(x: 8.49, y: 16.82), controlPoint2: CGPoint(x: 8.03, y: 16.75))
            fill14.addCurve(to: CGPoint(x: 2.79, y: 20.53), controlPoint1: CGPoint(x: 5.26, y: 16.75), controlPoint2: CGPoint(x: 3.32, y: 18.37))
            fill14.close()
            fill14.move(to: CGPoint(x: 47.85, y: 23.18))
            fill14.addLine(to: CGPoint(x: 1.33, y: 23.18))
            fill14.addCurve(to: CGPoint(x: 0, y: 21.91), controlPoint1: CGPoint(x: 0.62, y: 23.18), controlPoint2: CGPoint(x: 0.03, y: 22.62))
            fill14.addCurve(to: CGPoint(x: 0, y: 21.71), controlPoint1: CGPoint(x: 0, y: 21.84), controlPoint2: CGPoint(x: 0, y: 21.77))
            fill14.addCurve(to: CGPoint(x: 7.58, y: 14.11), controlPoint1: CGPoint(x: 0, y: 17.51), controlPoint2: CGPoint(x: 3.4, y: 14.11))
            fill14.addCurve(to: CGPoint(x: 7.97, y: 14.12), controlPoint1: CGPoint(x: 7.71, y: 14.11), controlPoint2: CGPoint(x: 7.84, y: 14.11))
            fill14.addCurve(to: CGPoint(x: 22.83, y: 0), controlPoint1: CGPoint(x: 8.4, y: 6.26), controlPoint2: CGPoint(x: 14.9, y: 0))
            fill14.addCurve(to: CGPoint(x: 37.07, y: 10.61), controlPoint1: CGPoint(x: 29.4, y: 0), controlPoint2: CGPoint(x: 35.2, y: 4.39))
            fill14.addCurve(to: CGPoint(x: 38.36, y: 10.54), controlPoint1: CGPoint(x: 37.5, y: 10.56), controlPoint2: CGPoint(x: 37.93, y: 10.54))
            fill14.addCurve(to: CGPoint(x: 49.19, y: 21.4), controlPoint1: CGPoint(x: 44.33, y: 10.54), controlPoint2: CGPoint(x: 49.19, y: 15.41))
            fill14.addCurve(to: CGPoint(x: 49.18, y: 21.92), controlPoint1: CGPoint(x: 49.19, y: 21.57), controlPoint2: CGPoint(x: 49.18, y: 21.75))
            fill14.addCurve(to: CGPoint(x: 47.85, y: 23.18), controlPoint1: CGPoint(x: 49.14, y: 22.63), controlPoint2: CGPoint(x: 48.56, y: 23.18))
            fill14.addLine(to: CGPoint(x: 47.85, y: 23.18))
            fill14.close()
            fill14.move(to: CGPoint(x: 47.85, y: 23.18))
            context.saveGState()
            context.translateBy(x: 236.6, y: 43.53)
            fill14.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill14.fill()
            context.restoreGState()
            
            /// Fill 43
            let fill43 = UIBezierPath()
            fill43.move(to: CGPoint(x: 118.13, y: 2.53))
            fill43.addLine(to: CGPoint(x: 118.13, y: 26.12))
            fill43.addCurve(to: CGPoint(x: 115.98, y: 28.65), controlPoint1: CGPoint(x: 118.13, y: 27.52), controlPoint2: CGPoint(x: 117.17, y: 28.65))
            fill43.addLine(to: CGPoint(x: 2.15, y: 28.65))
            fill43.addCurve(to: CGPoint(x: 0, y: 26.12), controlPoint1: CGPoint(x: 0.96, y: 28.65), controlPoint2: CGPoint(x: 0, y: 27.52))
            fill43.addLine(to: CGPoint(x: 0, y: 2.53))
            fill43.addCurve(to: CGPoint(x: 2.15, y: 0), controlPoint1: CGPoint(x: 0, y: 1.13), controlPoint2: CGPoint(x: 0.96, y: 0))
            fill43.addLine(to: CGPoint(x: 115.98, y: 0))
            fill43.addCurve(to: CGPoint(x: 118.13, y: 2.53), controlPoint1: CGPoint(x: 117.17, y: 0), controlPoint2: CGPoint(x: 118.13, y: 1.13))
            context.saveGState()
            context.translateBy(x: 51.88, y: 144.22)
            fill43.usesEvenOddFillRule = true
            UIColor(hue: 0.078, saturation: 0.48, brightness: 0.705, alpha: 1).setFill()
            fill43.fill()
            context.restoreGState()
            
            /// Fill 44
            let fill44 = UIBezierPath()
            fill44.move(to: CGPoint(x: 3.48, y: 2.65))
            fill44.addCurve(to: CGPoint(x: 2.65, y: 3.85), controlPoint1: CGPoint(x: 3.09, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 3.14))
            fill44.addLine(to: CGPoint(x: 2.65, y: 27.45))
            fill44.addCurve(to: CGPoint(x: 3.48, y: 28.65), controlPoint1: CGPoint(x: 2.65, y: 28.16), controlPoint2: CGPoint(x: 3.09, y: 28.65))
            fill44.addLine(to: CGPoint(x: 117.31, y: 28.65))
            fill44.addCurve(to: CGPoint(x: 118.13, y: 27.45), controlPoint1: CGPoint(x: 117.7, y: 28.65), controlPoint2: CGPoint(x: 118.13, y: 28.16))
            fill44.addLine(to: CGPoint(x: 118.13, y: 3.85))
            fill44.addCurve(to: CGPoint(x: 117.31, y: 2.65), controlPoint1: CGPoint(x: 118.13, y: 3.14), controlPoint2: CGPoint(x: 117.7, y: 2.65))
            fill44.addLine(to: CGPoint(x: 3.48, y: 2.65))
            fill44.close()
            fill44.move(to: CGPoint(x: 117.31, y: 31.3))
            fill44.addLine(to: CGPoint(x: 3.48, y: 31.3))
            fill44.addCurve(to: CGPoint(x: 0, y: 27.45), controlPoint1: CGPoint(x: 1.56, y: 31.3), controlPoint2: CGPoint(x: 0, y: 29.57))
            fill44.addLine(to: CGPoint(x: 0, y: 3.85))
            fill44.addCurve(to: CGPoint(x: 3.48, y: 0), controlPoint1: CGPoint(x: 0, y: 1.73), controlPoint2: CGPoint(x: 1.56, y: 0))
            fill44.addLine(to: CGPoint(x: 117.31, y: 0))
            fill44.addCurve(to: CGPoint(x: 120.78, y: 3.85), controlPoint1: CGPoint(x: 119.22, y: 0), controlPoint2: CGPoint(x: 120.78, y: 1.73))
            fill44.addLine(to: CGPoint(x: 120.78, y: 27.45))
            fill44.addCurve(to: CGPoint(x: 117.31, y: 31.3), controlPoint1: CGPoint(x: 120.78, y: 29.57), controlPoint2: CGPoint(x: 119.22, y: 31.3))
            fill44.addLine(to: CGPoint(x: 117.31, y: 31.3))
            fill44.close()
            fill44.move(to: CGPoint(x: 117.31, y: 31.3))
            context.saveGState()
            context.translateBy(x: 50.55, y: 142.89)
            fill44.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill44.fill()
            context.restoreGState()
            
            /// Fill 45
            let fill45 = UIBezierPath()
            fill45.move(to: CGPoint(x: 119.28, y: 2.65))
            fill45.addLine(to: CGPoint(x: 1.33, y: 2.65))
            fill45.addCurve(to: CGPoint(x: 0, y: 1.32), controlPoint1: CGPoint(x: 0.59, y: 2.65), controlPoint2: CGPoint(x: 0, y: 2.06))
            fill45.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill45.addLine(to: CGPoint(x: 119.28, y: 0))
            fill45.addCurve(to: CGPoint(x: 120.61, y: 1.32), controlPoint1: CGPoint(x: 120.01, y: 0), controlPoint2: CGPoint(x: 120.61, y: 0.59))
            fill45.addCurve(to: CGPoint(x: 119.28, y: 2.65), controlPoint1: CGPoint(x: 120.61, y: 2.06), controlPoint2: CGPoint(x: 120.01, y: 2.65))
            context.saveGState()
            context.translateBy(x: 50.73, y: 151.49)
            fill45.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill45.fill()
            context.restoreGState()
            
            /// Fill 46
            let fill46 = UIBezierPath()
            fill46.move(to: CGPoint(x: 16.39, y: 3.59))
            fill46.addCurve(to: CGPoint(x: 14.24, y: 5.73), controlPoint1: CGPoint(x: 16.39, y: 4.77), controlPoint2: CGPoint(x: 15.43, y: 5.73))
            fill46.addLine(to: CGPoint(x: 2.15, y: 5.73))
            fill46.addCurve(to: CGPoint(x: 0, y: 3.59), controlPoint1: CGPoint(x: 0.96, y: 5.73), controlPoint2: CGPoint(x: 0, y: 4.77))
            fill46.addLine(to: CGPoint(x: 0, y: 2.15))
            fill46.addCurve(to: CGPoint(x: 2.15, y: 0), controlPoint1: CGPoint(x: 0, y: 0.96), controlPoint2: CGPoint(x: 0.96, y: 0))
            fill46.addLine(to: CGPoint(x: 14.24, y: 0))
            fill46.addCurve(to: CGPoint(x: 16.39, y: 2.15), controlPoint1: CGPoint(x: 15.43, y: 0), controlPoint2: CGPoint(x: 16.39, y: 0.96))
            fill46.addLine(to: CGPoint(x: 16.39, y: 3.59))
            context.saveGState()
            context.translateBy(x: 64.2, y: 150.13)
            fill46.usesEvenOddFillRule = true
            UIColor(hue: 0.097, saturation: 0.355, brightness: 0.979, alpha: 1).setFill()
            fill46.fill()
            context.restoreGState()
            
            /// Fill 47
            let fill47 = UIBezierPath()
            fill47.move(to: CGPoint(x: 3.48, y: 2.65))
            fill47.addCurve(to: CGPoint(x: 2.65, y: 3.47), controlPoint1: CGPoint(x: 3.02, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 3.02))
            fill47.addLine(to: CGPoint(x: 2.65, y: 4.91))
            fill47.addCurve(to: CGPoint(x: 3.48, y: 5.73), controlPoint1: CGPoint(x: 2.65, y: 5.37), controlPoint2: CGPoint(x: 3.02, y: 5.73))
            fill47.addLine(to: CGPoint(x: 15.57, y: 5.73))
            fill47.addCurve(to: CGPoint(x: 16.39, y: 4.91), controlPoint1: CGPoint(x: 16.02, y: 5.73), controlPoint2: CGPoint(x: 16.39, y: 5.37))
            fill47.addLine(to: CGPoint(x: 16.39, y: 3.47))
            fill47.addCurve(to: CGPoint(x: 15.57, y: 2.65), controlPoint1: CGPoint(x: 16.39, y: 3.02), controlPoint2: CGPoint(x: 16.02, y: 2.65))
            fill47.addLine(to: CGPoint(x: 3.48, y: 2.65))
            fill47.close()
            fill47.move(to: CGPoint(x: 15.57, y: 8.38))
            fill47.addLine(to: CGPoint(x: 3.48, y: 8.38))
            fill47.addCurve(to: CGPoint(x: 0, y: 4.91), controlPoint1: CGPoint(x: 1.56, y: 8.38), controlPoint2: CGPoint(x: 0, y: 6.83))
            fill47.addLine(to: CGPoint(x: 0, y: 3.47))
            fill47.addCurve(to: CGPoint(x: 3.48, y: 0), controlPoint1: CGPoint(x: 0, y: 1.56), controlPoint2: CGPoint(x: 1.56, y: 0))
            fill47.addLine(to: CGPoint(x: 15.57, y: 0))
            fill47.addCurve(to: CGPoint(x: 19.05, y: 3.47), controlPoint1: CGPoint(x: 17.49, y: 0), controlPoint2: CGPoint(x: 19.05, y: 1.56))
            fill47.addLine(to: CGPoint(x: 19.05, y: 4.91))
            fill47.addCurve(to: CGPoint(x: 15.57, y: 8.38), controlPoint1: CGPoint(x: 19.05, y: 6.83), controlPoint2: CGPoint(x: 17.49, y: 8.38))
            fill47.addLine(to: CGPoint(x: 15.57, y: 8.38))
            fill47.close()
            fill47.move(to: CGPoint(x: 15.57, y: 8.38))
            context.saveGState()
            context.translateBy(x: 62.88, y: 148.8)
            fill47.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill47.fill()
            context.restoreGState()
            
            /// Fill 48
            let fill48 = UIBezierPath()
            fill48.move(to: CGPoint(x: 16.39, y: 3.59))
            fill48.addCurve(to: CGPoint(x: 14.24, y: 5.73), controlPoint1: CGPoint(x: 16.39, y: 4.77), controlPoint2: CGPoint(x: 15.43, y: 5.73))
            fill48.addLine(to: CGPoint(x: 2.15, y: 5.73))
            fill48.addCurve(to: CGPoint(x: 0, y: 3.59), controlPoint1: CGPoint(x: 0.96, y: 5.73), controlPoint2: CGPoint(x: 0, y: 4.77))
            fill48.addLine(to: CGPoint(x: 0, y: 2.15))
            fill48.addCurve(to: CGPoint(x: 2.15, y: 0), controlPoint1: CGPoint(x: 0, y: 0.96), controlPoint2: CGPoint(x: 0.96, y: 0))
            fill48.addLine(to: CGPoint(x: 14.24, y: 0))
            fill48.addCurve(to: CGPoint(x: 16.39, y: 2.15), controlPoint1: CGPoint(x: 15.43, y: 0), controlPoint2: CGPoint(x: 16.39, y: 0.96))
            fill48.addLine(to: CGPoint(x: 16.39, y: 3.59))
            context.saveGState()
            context.translateBy(x: 142.32, y: 150.13)
            fill48.usesEvenOddFillRule = true
            UIColor(hue: 0.097, saturation: 0.355, brightness: 0.979, alpha: 1).setFill()
            fill48.fill()
            context.restoreGState()
            
            /// Fill 49
            let fill49 = UIBezierPath()
            fill49.move(to: CGPoint(x: 3.48, y: 2.65))
            fill49.addCurve(to: CGPoint(x: 2.65, y: 3.47), controlPoint1: CGPoint(x: 3.02, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 3.02))
            fill49.addLine(to: CGPoint(x: 2.65, y: 4.91))
            fill49.addCurve(to: CGPoint(x: 3.48, y: 5.73), controlPoint1: CGPoint(x: 2.65, y: 5.37), controlPoint2: CGPoint(x: 3.02, y: 5.73))
            fill49.addLine(to: CGPoint(x: 15.57, y: 5.73))
            fill49.addCurve(to: CGPoint(x: 16.39, y: 4.91), controlPoint1: CGPoint(x: 16.02, y: 5.73), controlPoint2: CGPoint(x: 16.39, y: 5.37))
            fill49.addLine(to: CGPoint(x: 16.39, y: 3.47))
            fill49.addCurve(to: CGPoint(x: 15.57, y: 2.65), controlPoint1: CGPoint(x: 16.39, y: 3.02), controlPoint2: CGPoint(x: 16.02, y: 2.65))
            fill49.addLine(to: CGPoint(x: 3.48, y: 2.65))
            fill49.close()
            fill49.move(to: CGPoint(x: 15.57, y: 8.38))
            fill49.addLine(to: CGPoint(x: 3.48, y: 8.38))
            fill49.addCurve(to: CGPoint(x: 0, y: 4.91), controlPoint1: CGPoint(x: 1.56, y: 8.38), controlPoint2: CGPoint(x: 0, y: 6.83))
            fill49.addLine(to: CGPoint(x: 0, y: 3.47))
            fill49.addCurve(to: CGPoint(x: 3.48, y: 0), controlPoint1: CGPoint(x: 0, y: 1.56), controlPoint2: CGPoint(x: 1.56, y: 0))
            fill49.addLine(to: CGPoint(x: 15.57, y: 0))
            fill49.addCurve(to: CGPoint(x: 19.05, y: 3.47), controlPoint1: CGPoint(x: 17.49, y: 0), controlPoint2: CGPoint(x: 19.05, y: 1.56))
            fill49.addLine(to: CGPoint(x: 19.05, y: 4.91))
            fill49.addCurve(to: CGPoint(x: 15.57, y: 8.38), controlPoint1: CGPoint(x: 19.05, y: 6.83), controlPoint2: CGPoint(x: 17.49, y: 8.38))
            fill49.addLine(to: CGPoint(x: 15.57, y: 8.38))
            fill49.close()
            fill49.move(to: CGPoint(x: 15.57, y: 8.38))
            context.saveGState()
            context.translateBy(x: 141, y: 148.8)
            fill49.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill49.fill()
            context.restoreGState()
            
            /// Fill 50
            let fill50 = UIBezierPath()
            fill50.move(to: CGPoint.zero)
            fill50.addLine(to: CGPoint(x: 0, y: 9.4))
            fill50.addCurve(to: CGPoint(x: 3.73, y: 12.98), controlPoint1: CGPoint(x: 0, y: 11.38), controlPoint2: CGPoint(x: 1.67, y: 12.98))
            fill50.addLine(to: CGPoint(x: 23.32, y: 12.98))
            fill50.addCurve(to: CGPoint(x: 27.05, y: 9.4), controlPoint1: CGPoint(x: 25.38, y: 12.98), controlPoint2: CGPoint(x: 27.05, y: 11.38))
            fill50.addLine(to: CGPoint(x: 27.05, y: 0))
            fill50.addLine(to: CGPoint.zero)
            context.saveGState()
            context.translateBy(x: 96.92, y: 152.81)
            fill50.usesEvenOddFillRule = true
            UIColor(hue: 0.053, saturation: 0.578, brightness: 0.585, alpha: 1).setFill()
            fill50.fill()
            context.restoreGState()
            
            /// Fill 51
            let fill51 = UIBezierPath()
            fill51.move(to: CGPoint(x: 2.65, y: 2.65))
            fill51.addLine(to: CGPoint(x: 2.65, y: 10.73))
            fill51.addCurve(to: CGPoint(x: 5.05, y: 12.98), controlPoint1: CGPoint(x: 2.65, y: 11.97), controlPoint2: CGPoint(x: 3.73, y: 12.98))
            fill51.addLine(to: CGPoint(x: 24.65, y: 12.98))
            fill51.addCurve(to: CGPoint(x: 27.05, y: 10.73), controlPoint1: CGPoint(x: 25.97, y: 12.98), controlPoint2: CGPoint(x: 27.05, y: 11.97))
            fill51.addLine(to: CGPoint(x: 27.05, y: 2.65))
            fill51.addLine(to: CGPoint(x: 2.65, y: 2.65))
            fill51.close()
            fill51.move(to: CGPoint(x: 24.65, y: 15.63))
            fill51.addLine(to: CGPoint(x: 5.05, y: 15.63))
            fill51.addCurve(to: CGPoint(x: 0, y: 10.73), controlPoint1: CGPoint(x: 2.27, y: 15.63), controlPoint2: CGPoint(x: 0, y: 13.43))
            fill51.addLine(to: CGPoint(x: 0, y: 1.32))
            fill51.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill51.addLine(to: CGPoint(x: 28.38, y: 0))
            fill51.addCurve(to: CGPoint(x: 29.7, y: 1.32), controlPoint1: CGPoint(x: 29.11, y: 0), controlPoint2: CGPoint(x: 29.7, y: 0.59))
            fill51.addLine(to: CGPoint(x: 29.7, y: 10.73))
            fill51.addCurve(to: CGPoint(x: 24.65, y: 15.63), controlPoint1: CGPoint(x: 29.7, y: 13.43), controlPoint2: CGPoint(x: 27.44, y: 15.63))
            fill51.addLine(to: CGPoint(x: 24.65, y: 15.63))
            fill51.close()
            fill51.move(to: CGPoint(x: 24.65, y: 15.63))
            context.saveGState()
            context.translateBy(x: 95.6, y: 151.49)
            fill51.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill51.fill()
            context.restoreGState()
            
            /// Fill 52
            let fill52 = UIBezierPath()
            fill52.move(to: CGPoint(x: 16.93, y: 0))
            fill52.addLine(to: CGPoint(x: 16.93, y: 7.34))
            fill52.addCurve(to: CGPoint(x: 16.14, y: 8.14), controlPoint1: CGPoint(x: 16.93, y: 7.78), controlPoint2: CGPoint(x: 16.58, y: 8.14))
            fill52.addLine(to: CGPoint(x: 0.8, y: 8.14))
            fill52.addCurve(to: CGPoint(x: 0, y: 7.34), controlPoint1: CGPoint(x: 0.36, y: 8.14), controlPoint2: CGPoint(x: 0, y: 7.78))
            fill52.addLine(to: CGPoint.zero)
            fill52.addLine(to: CGPoint(x: 16.93, y: 0))
            context.saveGState()
            context.translateBy(x: 101.97, y: 153.46)
            fill52.usesEvenOddFillRule = true
            UIColor(hue: 0.078, saturation: 0.48, brightness: 0.705, alpha: 1).setFill()
            fill52.fill()
            context.restoreGState()
            
            /// Fill 53
            let fill53 = UIBezierPath()
            fill53.move(to: CGPoint(x: 2.65, y: 8.14))
            fill53.addLine(to: CGPoint(x: 16.93, y: 8.14))
            fill53.addLine(to: CGPoint(x: 16.93, y: 2.65))
            fill53.addLine(to: CGPoint(x: 2.65, y: 2.65))
            fill53.addLine(to: CGPoint(x: 2.65, y: 8.14))
            fill53.close()
            fill53.move(to: CGPoint(x: 17.46, y: 10.79))
            fill53.addLine(to: CGPoint(x: 2.12, y: 10.79))
            fill53.addCurve(to: CGPoint(x: 0, y: 8.66), controlPoint1: CGPoint(x: 0.95, y: 10.79), controlPoint2: CGPoint(x: 0, y: 9.83))
            fill53.addLine(to: CGPoint(x: 0, y: 1.32))
            fill53.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill53.addLine(to: CGPoint(x: 18.26, y: 0))
            fill53.addCurve(to: CGPoint(x: 19.59, y: 1.32), controlPoint1: CGPoint(x: 18.99, y: 0), controlPoint2: CGPoint(x: 19.59, y: 0.59))
            fill53.addLine(to: CGPoint(x: 19.59, y: 8.66))
            fill53.addCurve(to: CGPoint(x: 17.46, y: 10.79), controlPoint1: CGPoint(x: 19.59, y: 9.83), controlPoint2: CGPoint(x: 18.63, y: 10.79))
            fill53.addLine(to: CGPoint(x: 17.46, y: 10.79))
            fill53.close()
            fill53.move(to: CGPoint(x: 17.46, y: 10.79))
            context.saveGState()
            context.translateBy(x: 100.65, y: 152.13)
            fill53.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill53.fill()
            context.restoreGState()
            
            /// Fill 80
            let fill80 = UIBezierPath()
            fill80.move(to: CGPoint(x: 103.06, y: 2.65))
            fill80.addLine(to: CGPoint(x: 1.33, y: 2.65))
            fill80.addCurve(to: CGPoint(x: 0, y: 1.32), controlPoint1: CGPoint(x: 0.59, y: 2.65), controlPoint2: CGPoint(x: 0, y: 2.06))
            fill80.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill80.addLine(to: CGPoint(x: 103.06, y: 0))
            fill80.addCurve(to: CGPoint(x: 104.38, y: 1.32), controlPoint1: CGPoint(x: 103.79, y: 0), controlPoint2: CGPoint(x: 104.38, y: 0.59))
            fill80.addCurve(to: CGPoint(x: 103.06, y: 2.65), controlPoint1: CGPoint(x: 104.38, y: 2.06), controlPoint2: CGPoint(x: 103.79, y: 2.65))
            context.saveGState()
            context.translateBy(x: 277.32, y: 102.68)
            fill80.usesEvenOddFillRule = true
            UIColor(hue: 0.108, saturation: 0.079, brightness: 0.997, alpha: 1).setFill()
            fill80.fill()
            context.restoreGState()
            
            /// Fill 81
            let fill81 = UIBezierPath()
            fill81.move(to: CGPoint(x: 35.41, y: 30.51))
            fill81.addCurve(to: CGPoint(x: 30.54, y: 35.39), controlPoint1: CGPoint(x: 35.41, y: 33.21), controlPoint2: CGPoint(x: 33.23, y: 35.39))
            fill81.addLine(to: CGPoint(x: 4.88, y: 35.39))
            fill81.addCurve(to: CGPoint(x: 0, y: 30.51), controlPoint1: CGPoint(x: 2.19, y: 35.39), controlPoint2: CGPoint(x: 0, y: 33.21))
            fill81.addLine(to: CGPoint(x: 0, y: 4.88))
            fill81.addCurve(to: CGPoint(x: 4.88, y: 0), controlPoint1: CGPoint(x: 0, y: 2.18), controlPoint2: CGPoint(x: 2.19, y: 0))
            fill81.addLine(to: CGPoint(x: 30.54, y: 0))
            fill81.addCurve(to: CGPoint(x: 35.41, y: 4.88), controlPoint1: CGPoint(x: 33.23, y: 0), controlPoint2: CGPoint(x: 35.41, y: 2.18))
            fill81.addLine(to: CGPoint(x: 35.41, y: 30.51))
            context.saveGState()
            context.translateBy(x: 312.21, y: 81.34)
            fill81.usesEvenOddFillRule = true
            UIColor(hue: 0.053, saturation: 0.578, brightness: 0.585, alpha: 1).setFill()
            fill81.fill()
            context.restoreGState()
            
            /// Fill 82
            let fill82 = UIBezierPath()
            fill82.move(to: CGPoint(x: 6.21, y: 2.65))
            fill82.addCurve(to: CGPoint(x: 2.65, y: 6.2), controlPoint1: CGPoint(x: 4.25, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 4.24))
            fill82.addLine(to: CGPoint(x: 2.65, y: 31.84))
            fill82.addCurve(to: CGPoint(x: 6.21, y: 35.39), controlPoint1: CGPoint(x: 2.65, y: 33.8), controlPoint2: CGPoint(x: 4.25, y: 35.39))
            fill82.addLine(to: CGPoint(x: 31.86, y: 35.39))
            fill82.addCurve(to: CGPoint(x: 35.41, y: 31.84), controlPoint1: CGPoint(x: 33.82, y: 35.39), controlPoint2: CGPoint(x: 35.41, y: 33.8))
            fill82.addLine(to: CGPoint(x: 35.41, y: 6.2))
            fill82.addCurve(to: CGPoint(x: 31.86, y: 2.65), controlPoint1: CGPoint(x: 35.41, y: 4.24), controlPoint2: CGPoint(x: 33.82, y: 2.65))
            fill82.addLine(to: CGPoint(x: 6.21, y: 2.65))
            fill82.close()
            fill82.move(to: CGPoint(x: 31.86, y: 38.04))
            fill82.addLine(to: CGPoint(x: 6.21, y: 38.04))
            fill82.addCurve(to: CGPoint(x: 0, y: 31.84), controlPoint1: CGPoint(x: 2.78, y: 38.04), controlPoint2: CGPoint(x: 0, y: 35.26))
            fill82.addLine(to: CGPoint(x: 0, y: 6.2))
            fill82.addCurve(to: CGPoint(x: 6.21, y: 0), controlPoint1: CGPoint(x: 0, y: 2.78), controlPoint2: CGPoint(x: 2.78, y: 0))
            fill82.addLine(to: CGPoint(x: 31.86, y: 0))
            fill82.addCurve(to: CGPoint(x: 38.07, y: 6.2), controlPoint1: CGPoint(x: 35.28, y: 0), controlPoint2: CGPoint(x: 38.07, y: 2.78))
            fill82.addLine(to: CGPoint(x: 38.07, y: 31.84))
            fill82.addCurve(to: CGPoint(x: 31.86, y: 38.04), controlPoint1: CGPoint(x: 38.07, y: 35.26), controlPoint2: CGPoint(x: 35.28, y: 38.04))
            fill82.addLine(to: CGPoint(x: 31.86, y: 38.04))
            fill82.close()
            fill82.move(to: CGPoint(x: 31.86, y: 38.04))
            context.saveGState()
            context.translateBy(x: 310.89, y: 80.02)
            fill82.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill82.fill()
            context.restoreGState()
            
            /// Fill 83
            let fill83 = UIBezierPath()
            fill83.move(to: CGPoint(x: 23.26, y: 22.15))
            fill83.addCurve(to: CGPoint(x: 22.17, y: 23.25), controlPoint1: CGPoint(x: 23.26, y: 22.76), controlPoint2: CGPoint(x: 22.77, y: 23.25))
            fill83.addLine(to: CGPoint(x: 1.1, y: 23.25))
            fill83.addCurve(to: CGPoint(x: 0, y: 22.15), controlPoint1: CGPoint(x: 0.49, y: 23.25), controlPoint2: CGPoint(x: 0, y: 22.76))
            fill83.addLine(to: CGPoint(x: 0, y: 1.1))
            fill83.addCurve(to: CGPoint(x: 1.1, y: 0), controlPoint1: CGPoint(x: 0, y: 0.49), controlPoint2: CGPoint(x: 0.49, y: 0))
            fill83.addLine(to: CGPoint(x: 22.17, y: 0))
            fill83.addCurve(to: CGPoint(x: 23.26, y: 1.1), controlPoint1: CGPoint(x: 22.77, y: 0), controlPoint2: CGPoint(x: 23.26, y: 0.49))
            fill83.addLine(to: CGPoint(x: 23.26, y: 22.15))
            context.saveGState()
            context.translateBy(x: 318.28, y: 86.97)
            fill83.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill83.fill()
            context.restoreGState()
            
            /// Fill 84
            let fill84 = UIBezierPath()
            fill84.move(to: CGPoint(x: 2.65, y: 23.25))
            fill84.addLine(to: CGPoint(x: 23.26, y: 23.25))
            fill84.addLine(to: CGPoint(x: 23.26, y: 2.65))
            fill84.addLine(to: CGPoint(x: 2.65, y: 2.65))
            fill84.addLine(to: CGPoint(x: 2.65, y: 23.25))
            fill84.close()
            fill84.move(to: CGPoint(x: 23.49, y: 25.9))
            fill84.addLine(to: CGPoint(x: 2.42, y: 25.9))
            fill84.addCurve(to: CGPoint(x: 0, y: 23.47), controlPoint1: CGPoint(x: 1.09, y: 25.9), controlPoint2: CGPoint(x: 0, y: 24.81))
            fill84.addLine(to: CGPoint(x: 0, y: 2.42))
            fill84.addCurve(to: CGPoint(x: 2.42, y: 0), controlPoint1: CGPoint(x: 0, y: 1.09), controlPoint2: CGPoint(x: 1.09, y: 0))
            fill84.addLine(to: CGPoint(x: 23.49, y: 0))
            fill84.addCurve(to: CGPoint(x: 25.91, y: 2.42), controlPoint1: CGPoint(x: 24.83, y: 0), controlPoint2: CGPoint(x: 25.91, y: 1.09))
            fill84.addLine(to: CGPoint(x: 25.91, y: 23.47))
            fill84.addCurve(to: CGPoint(x: 23.49, y: 25.9), controlPoint1: CGPoint(x: 25.91, y: 24.81), controlPoint2: CGPoint(x: 24.83, y: 25.9))
            fill84.addLine(to: CGPoint(x: 23.49, y: 25.9))
            fill84.close()
            fill84.move(to: CGPoint(x: 23.49, y: 25.9))
            context.saveGState()
            context.translateBy(x: 316.95, y: 85.65)
            fill84.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill84.fill()
            context.restoreGState()
            
            /// Fill 85
            let fill85 = UIBezierPath()
            fill85.move(to: CGPoint(x: 121.77, y: 70.54))
            fill85.addCurve(to: CGPoint(x: 115.46, y: 76.84), controlPoint1: CGPoint(x: 121.77, y: 74.02), controlPoint2: CGPoint(x: 118.94, y: 76.84))
            fill85.addLine(to: CGPoint(x: 6.31, y: 76.84))
            fill85.addCurve(to: CGPoint(x: 0, y: 70.54), controlPoint1: CGPoint(x: 2.83, y: 76.84), controlPoint2: CGPoint(x: 0, y: 74.02))
            fill85.addLine(to: CGPoint(x: 0, y: 6.31))
            fill85.addCurve(to: CGPoint(x: 6.31, y: 0), controlPoint1: CGPoint(x: 0, y: 2.82), controlPoint2: CGPoint(x: 2.83, y: 0))
            fill85.addLine(to: CGPoint(x: 115.46, y: 0))
            fill85.addCurve(to: CGPoint(x: 121.77, y: 6.31), controlPoint1: CGPoint(x: 118.94, y: 0), controlPoint2: CGPoint(x: 121.77, y: 2.82))
            fill85.addLine(to: CGPoint(x: 121.77, y: 70.54))
            context.saveGState()
            context.translateBy(x: 268.26, y: 95.91)
            fill85.usesEvenOddFillRule = true
            UIColor(hue: 0.096, saturation: 0.242, brightness: 0.985, alpha: 1).setFill()
            fill85.fill()
            context.restoreGState()
            
            /// Fill 86
            let fill86 = UIBezierPath()
            fill86.move(to: CGPoint(x: 7.64, y: 2.65))
            fill86.addCurve(to: CGPoint(x: 2.65, y: 7.63), controlPoint1: CGPoint(x: 4.89, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 4.88))
            fill86.addLine(to: CGPoint(x: 2.65, y: 71.86))
            fill86.addCurve(to: CGPoint(x: 7.64, y: 76.84), controlPoint1: CGPoint(x: 2.65, y: 74.61), controlPoint2: CGPoint(x: 4.89, y: 76.84))
            fill86.addLine(to: CGPoint(x: 116.79, y: 76.84))
            fill86.addCurve(to: CGPoint(x: 121.77, y: 71.86), controlPoint1: CGPoint(x: 119.53, y: 76.84), controlPoint2: CGPoint(x: 121.77, y: 74.61))
            fill86.addLine(to: CGPoint(x: 121.77, y: 7.63))
            fill86.addCurve(to: CGPoint(x: 116.79, y: 2.65), controlPoint1: CGPoint(x: 121.77, y: 4.88), controlPoint2: CGPoint(x: 119.53, y: 2.65))
            fill86.addLine(to: CGPoint(x: 7.64, y: 2.65))
            fill86.close()
            fill86.move(to: CGPoint(x: 116.79, y: 79.49))
            fill86.addLine(to: CGPoint(x: 7.64, y: 79.49))
            fill86.addCurve(to: CGPoint(x: 0, y: 71.86), controlPoint1: CGPoint(x: 3.43, y: 79.49), controlPoint2: CGPoint(x: 0, y: 76.07))
            fill86.addLine(to: CGPoint(x: 0, y: 7.63))
            fill86.addCurve(to: CGPoint(x: 7.64, y: 0), controlPoint1: CGPoint(x: 0, y: 3.42), controlPoint2: CGPoint(x: 3.43, y: 0))
            fill86.addLine(to: CGPoint(x: 116.79, y: 0))
            fill86.addCurve(to: CGPoint(x: 124.42, y: 7.63), controlPoint1: CGPoint(x: 121, y: 0), controlPoint2: CGPoint(x: 124.42, y: 3.42))
            fill86.addLine(to: CGPoint(x: 124.42, y: 71.86))
            fill86.addCurve(to: CGPoint(x: 116.79, y: 79.49), controlPoint1: CGPoint(x: 124.42, y: 76.07), controlPoint2: CGPoint(x: 121, y: 79.49))
            fill86.addLine(to: CGPoint(x: 116.79, y: 79.49))
            fill86.close()
            fill86.move(to: CGPoint(x: 116.79, y: 79.49))
            context.saveGState()
            context.translateBy(x: 266.93, y: 94.59)
            fill86.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill86.fill()
            context.restoreGState()
            
            /// Fill 87
            let fill87 = UIBezierPath()
            fill87.move(to: CGPoint(x: 119.12, y: 0))
            fill87.addLine(to: CGPoint(x: 119.12, y: 3.24))
            fill87.addCurve(to: CGPoint(x: 112.95, y: 9.41), controlPoint1: CGPoint(x: 119.12, y: 6.65), controlPoint2: CGPoint(x: 116.36, y: 9.41))
            fill87.addLine(to: CGPoint(x: 6.17, y: 9.41))
            fill87.addCurve(to: CGPoint(x: 0, y: 3.24), controlPoint1: CGPoint(x: 2.76, y: 9.41), controlPoint2: CGPoint(x: 0, y: 6.65))
            fill87.addLine(to: CGPoint.zero)
            fill87.addLine(to: CGPoint(x: 119.12, y: 0))
            context.saveGState()
            context.translateBy(x: 269.58, y: 162.35)
            fill87.usesEvenOddFillRule = true
            UIColor(hue: 0.069, saturation: 0.292, brightness: 0.933, alpha: 1).setFill()
            fill87.fill()
            context.restoreGState()
            
            /// Fill 88
            let fill88 = UIBezierPath()
            fill88.move(to: CGPoint(x: 14.14, y: 74.19))
            fill88.addCurve(to: CGPoint(x: 11.49, y: 76.84), controlPoint1: CGPoint(x: 14.14, y: 75.66), controlPoint2: CGPoint(x: 12.95, y: 76.84))
            fill88.addLine(to: CGPoint(x: 2.65, y: 76.84))
            fill88.addCurve(to: CGPoint(x: 0, y: 74.19), controlPoint1: CGPoint(x: 1.19, y: 76.84), controlPoint2: CGPoint(x: 0, y: 75.66))
            fill88.addLine(to: CGPoint(x: 0, y: 2.65))
            fill88.addCurve(to: CGPoint(x: 2.65, y: 0), controlPoint1: CGPoint(x: 0, y: 1.19), controlPoint2: CGPoint(x: 1.19, y: 0))
            fill88.addLine(to: CGPoint(x: 11.49, y: 0))
            fill88.addCurve(to: CGPoint(x: 14.14, y: 2.65), controlPoint1: CGPoint(x: 12.95, y: 0), controlPoint2: CGPoint(x: 14.14, y: 1.19))
            fill88.addLine(to: CGPoint(x: 14.14, y: 74.19))
            context.saveGState()
            context.translateBy(x: 283.8, y: 95.69)
            fill88.usesEvenOddFillRule = true
            UIColor(hue: 0.08, saturation: 0.496, brightness: 0.767, alpha: 1).setFill()
            fill88.fill()
            context.restoreGState()
            
            /// Fill 89
            let fill89 = UIBezierPath()
            fill89.move(to: CGPoint(x: 3.98, y: 2.65))
            fill89.addCurve(to: CGPoint(x: 2.65, y: 3.97), controlPoint1: CGPoint(x: 3.25, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 3.24))
            fill89.addLine(to: CGPoint(x: 2.65, y: 75.52))
            fill89.addCurve(to: CGPoint(x: 3.98, y: 76.84), controlPoint1: CGPoint(x: 2.65, y: 76.25), controlPoint2: CGPoint(x: 3.25, y: 76.84))
            fill89.addLine(to: CGPoint(x: 12.81, y: 76.84))
            fill89.addCurve(to: CGPoint(x: 14.14, y: 75.52), controlPoint1: CGPoint(x: 13.55, y: 76.84), controlPoint2: CGPoint(x: 14.14, y: 76.25))
            fill89.addLine(to: CGPoint(x: 14.14, y: 3.97))
            fill89.addCurve(to: CGPoint(x: 12.81, y: 2.65), controlPoint1: CGPoint(x: 14.14, y: 3.24), controlPoint2: CGPoint(x: 13.55, y: 2.65))
            fill89.addLine(to: CGPoint(x: 3.98, y: 2.65))
            fill89.close()
            fill89.move(to: CGPoint(x: 12.81, y: 79.49))
            fill89.addLine(to: CGPoint(x: 3.98, y: 79.49))
            fill89.addCurve(to: CGPoint(x: 0, y: 75.52), controlPoint1: CGPoint(x: 1.78, y: 79.49), controlPoint2: CGPoint(x: 0, y: 77.71))
            fill89.addLine(to: CGPoint(x: 0, y: 3.97))
            fill89.addCurve(to: CGPoint(x: 3.98, y: 0), controlPoint1: CGPoint(x: 0, y: 1.78), controlPoint2: CGPoint(x: 1.78, y: 0))
            fill89.addLine(to: CGPoint(x: 12.81, y: 0))
            fill89.addCurve(to: CGPoint(x: 16.79, y: 3.97), controlPoint1: CGPoint(x: 15.01, y: 0), controlPoint2: CGPoint(x: 16.79, y: 1.78))
            fill89.addLine(to: CGPoint(x: 16.79, y: 75.52))
            fill89.addCurve(to: CGPoint(x: 12.81, y: 79.49), controlPoint1: CGPoint(x: 16.79, y: 77.71), controlPoint2: CGPoint(x: 15.01, y: 79.49))
            fill89.addLine(to: CGPoint(x: 12.81, y: 79.49))
            fill89.close()
            fill89.move(to: CGPoint(x: 12.81, y: 79.49))
            context.saveGState()
            context.translateBy(x: 282.47, y: 94.37)
            fill89.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill89.fill()
            context.restoreGState()
            
            /// Fill 90
            let fill90 = UIBezierPath()
            fill90.move(to: CGPoint(x: 14.14, y: 74.19))
            fill90.addCurve(to: CGPoint(x: 11.49, y: 76.84), controlPoint1: CGPoint(x: 14.14, y: 75.66), controlPoint2: CGPoint(x: 12.95, y: 76.84))
            fill90.addLine(to: CGPoint(x: 2.65, y: 76.84))
            fill90.addCurve(to: CGPoint(x: 0, y: 74.19), controlPoint1: CGPoint(x: 1.19, y: 76.84), controlPoint2: CGPoint(x: 0, y: 75.66))
            fill90.addLine(to: CGPoint(x: 0, y: 2.65))
            fill90.addCurve(to: CGPoint(x: 2.65, y: 0), controlPoint1: CGPoint(x: 0, y: 1.19), controlPoint2: CGPoint(x: 1.19, y: 0))
            fill90.addLine(to: CGPoint(x: 11.49, y: 0))
            fill90.addCurve(to: CGPoint(x: 14.14, y: 2.65), controlPoint1: CGPoint(x: 12.95, y: 0), controlPoint2: CGPoint(x: 14.14, y: 1.19))
            fill90.addLine(to: CGPoint(x: 14.14, y: 74.19))
            context.saveGState()
            context.translateBy(x: 359.31, y: 95.69)
            fill90.usesEvenOddFillRule = true
            UIColor(hue: 0.08, saturation: 0.496, brightness: 0.767, alpha: 1).setFill()
            fill90.fill()
            context.restoreGState()
            
            /// Fill 91
            let fill91 = UIBezierPath()
            fill91.move(to: CGPoint(x: 3.98, y: 2.65))
            fill91.addCurve(to: CGPoint(x: 2.65, y: 3.97), controlPoint1: CGPoint(x: 3.25, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 3.24))
            fill91.addLine(to: CGPoint(x: 2.65, y: 75.52))
            fill91.addCurve(to: CGPoint(x: 3.98, y: 76.84), controlPoint1: CGPoint(x: 2.65, y: 76.25), controlPoint2: CGPoint(x: 3.25, y: 76.84))
            fill91.addLine(to: CGPoint(x: 12.81, y: 76.84))
            fill91.addCurve(to: CGPoint(x: 14.14, y: 75.52), controlPoint1: CGPoint(x: 13.55, y: 76.84), controlPoint2: CGPoint(x: 14.14, y: 76.25))
            fill91.addLine(to: CGPoint(x: 14.14, y: 3.97))
            fill91.addCurve(to: CGPoint(x: 12.81, y: 2.65), controlPoint1: CGPoint(x: 14.14, y: 3.24), controlPoint2: CGPoint(x: 13.55, y: 2.65))
            fill91.addLine(to: CGPoint(x: 3.98, y: 2.65))
            fill91.close()
            fill91.move(to: CGPoint(x: 12.81, y: 79.49))
            fill91.addLine(to: CGPoint(x: 3.98, y: 79.49))
            fill91.addCurve(to: CGPoint(x: 0, y: 75.52), controlPoint1: CGPoint(x: 1.78, y: 79.49), controlPoint2: CGPoint(x: 0, y: 77.71))
            fill91.addLine(to: CGPoint(x: 0, y: 3.97))
            fill91.addCurve(to: CGPoint(x: 3.98, y: 0), controlPoint1: CGPoint(x: 0, y: 1.78), controlPoint2: CGPoint(x: 1.78, y: 0))
            fill91.addLine(to: CGPoint(x: 12.81, y: 0))
            fill91.addCurve(to: CGPoint(x: 16.79, y: 3.97), controlPoint1: CGPoint(x: 15.01, y: 0), controlPoint2: CGPoint(x: 16.79, y: 1.78))
            fill91.addLine(to: CGPoint(x: 16.79, y: 75.52))
            fill91.addCurve(to: CGPoint(x: 12.81, y: 79.49), controlPoint1: CGPoint(x: 16.79, y: 77.71), controlPoint2: CGPoint(x: 15.01, y: 79.49))
            fill91.addLine(to: CGPoint(x: 12.81, y: 79.49))
            fill91.close()
            fill91.move(to: CGPoint(x: 12.81, y: 79.49))
            context.saveGState()
            context.translateBy(x: 357.98, y: 94.37)
            fill91.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill91.fill()
            context.restoreGState()
            
            /// Fill 92
            let fill92 = UIBezierPath()
            fill92.move(to: CGPoint(x: 4.02, y: 2.01))
            fill92.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill92.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill92.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill92.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 288.82, y: 105.87)
            fill92.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill92.fill()
            context.restoreGState()
            
            /// Fill 93
            let fill93 = UIBezierPath()
            fill93.move(to: CGPoint(x: 4.02, y: 2.01))
            fill93.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill93.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill93.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill93.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 288.82, y: 119.1)
            fill93.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill93.fill()
            context.restoreGState()
            
            /// Fill 94
            let fill94 = UIBezierPath()
            fill94.move(to: CGPoint(x: 4.02, y: 2.01))
            fill94.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill94.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill94.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill94.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 288.82, y: 132.33)
            fill94.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill94.fill()
            context.restoreGState()
            
            /// Fill 95
            let fill95 = UIBezierPath()
            fill95.move(to: CGPoint(x: 4.02, y: 2.01))
            fill95.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill95.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill95.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill95.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 288.82, y: 145.55)
            fill95.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill95.fill()
            context.restoreGState()
            
            /// Fill 96
            let fill96 = UIBezierPath()
            fill96.move(to: CGPoint(x: 4.02, y: 2.01))
            fill96.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill96.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill96.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill96.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 288.82, y: 158.78)
            fill96.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill96.fill()
            context.restoreGState()
            
            /// Fill 97
            let fill97 = UIBezierPath()
            fill97.move(to: CGPoint(x: 4.02, y: 2.01))
            fill97.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill97.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill97.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill97.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 364.37, y: 105.87)
            fill97.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill97.fill()
            context.restoreGState()
            
            /// Fill 98
            let fill98 = UIBezierPath()
            fill98.move(to: CGPoint(x: 4.02, y: 2.01))
            fill98.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill98.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill98.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill98.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 364.37, y: 119.1)
            fill98.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill98.fill()
            context.restoreGState()
            
            /// Fill 99
            let fill99 = UIBezierPath()
            fill99.move(to: CGPoint(x: 4.02, y: 2.01))
            fill99.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill99.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill99.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill99.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 364.37, y: 132.33)
            fill99.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill99.fill()
            context.restoreGState()
            
            /// Fill 100
            let fill100 = UIBezierPath()
            fill100.move(to: CGPoint(x: 4.02, y: 2.01))
            fill100.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill100.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill100.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill100.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 364.37, y: 145.55)
            fill100.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill100.fill()
            context.restoreGState()
            
            /// Fill 101
            let fill101 = UIBezierPath()
            fill101.move(to: CGPoint(x: 4.02, y: 2.01))
            fill101.addCurve(to: CGPoint(x: 2.01, y: 4.01), controlPoint1: CGPoint(x: 4.02, y: 3.11), controlPoint2: CGPoint(x: 3.12, y: 4.01))
            fill101.addCurve(to: CGPoint(x: 0, y: 2.01), controlPoint1: CGPoint(x: 0.9, y: 4.01), controlPoint2: CGPoint(x: 0, y: 3.11))
            fill101.addCurve(to: CGPoint(x: 2.01, y: 0), controlPoint1: CGPoint(x: 0, y: 0.9), controlPoint2: CGPoint(x: 0.9, y: 0))
            fill101.addCurve(to: CGPoint(x: 4.02, y: 2.01), controlPoint1: CGPoint(x: 3.12, y: 0), controlPoint2: CGPoint(x: 4.02, y: 0.9))
            context.saveGState()
            context.translateBy(x: 364.37, y: 158.78)
            fill101.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill101.fill()
            context.restoreGState()
            
            /// Fill 102
            let fill102 = UIBezierPath()
            fill102.move(to: CGPoint(x: 367.52, y: 0))
            fill102.addLine(to: CGPoint.zero)
            context.saveGState()
            context.translateBy(x: 37.88, y: 173.12)
            fill102.usesEvenOddFillRule = true
            UIColor(hue: 0.078, saturation: 0.48, brightness: 0.705, alpha: 1).setFill()
            fill102.fill()
            context.restoreGState()
            
            /// Fill 103
            let fill103 = UIBezierPath()
            fill103.move(to: CGPoint(x: 368.85, y: 2.65))
            fill103.addLine(to: CGPoint(x: 1.33, y: 2.65))
            fill103.addCurve(to: CGPoint(x: 0, y: 1.32), controlPoint1: CGPoint(x: 0.59, y: 2.65), controlPoint2: CGPoint(x: 0, y: 2.06))
            fill103.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill103.addLine(to: CGPoint(x: 368.85, y: 0))
            fill103.addCurve(to: CGPoint(x: 370.17, y: 1.32), controlPoint1: CGPoint(x: 369.58, y: 0), controlPoint2: CGPoint(x: 370.17, y: 0.59))
            fill103.addCurve(to: CGPoint(x: 368.85, y: 2.65), controlPoint1: CGPoint(x: 370.17, y: 2.06), controlPoint2: CGPoint(x: 369.58, y: 2.65))
            context.saveGState()
            context.translateBy(x: 36.56, y: 171.79)
            fill103.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill103.fill()
            context.restoreGState()
            
            /// Fill 104
            let fill104 = UIBezierPath()
            fill104.move(to: CGPoint(x: 28.83, y: 42.97))
            fill104.addCurve(to: CGPoint(x: 26.03, y: 45.32), controlPoint1: CGPoint(x: 28.83, y: 44.27), controlPoint2: CGPoint(x: 27.57, y: 45.32))
            fill104.addLine(to: CGPoint(x: 7.47, y: 45.32))
            fill104.addCurve(to: CGPoint(x: 4.67, y: 42.97), controlPoint1: CGPoint(x: 5.92, y: 45.32), controlPoint2: CGPoint(x: 4.67, y: 44.27))
            fill104.addLine(to: CGPoint(x: 0, y: 2.35))
            fill104.addCurve(to: CGPoint(x: 2.8, y: 0), controlPoint1: CGPoint(x: 0, y: 1.05), controlPoint2: CGPoint(x: 1.25, y: 0))
            fill104.addLine(to: CGPoint(x: 30.7, y: 0))
            fill104.addCurve(to: CGPoint(x: 33.5, y: 2.35), controlPoint1: CGPoint(x: 32.24, y: 0), controlPoint2: CGPoint(x: 33.5, y: 1.05))
            fill104.addLine(to: CGPoint(x: 28.83, y: 42.97))
            context.saveGState()
            context.translateBy(x: 306.16, y: 126.77)
            fill104.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill104.fill()
            context.restoreGState()
            
            /// Fill 105
            let fill105 = UIBezierPath()
            fill105.move(to: CGPoint(x: 2.65, y: 3.62))
            fill105.addLine(to: CGPoint(x: 7.31, y: 44.14))
            fill105.addCurve(to: CGPoint(x: 7.32, y: 44.29), controlPoint1: CGPoint(x: 7.32, y: 44.19), controlPoint2: CGPoint(x: 7.32, y: 44.24))
            fill105.addCurve(to: CGPoint(x: 8.8, y: 45.32), controlPoint1: CGPoint(x: 7.32, y: 44.84), controlPoint2: CGPoint(x: 8.01, y: 45.32))
            fill105.addLine(to: CGPoint(x: 27.35, y: 45.32))
            fill105.addCurve(to: CGPoint(x: 28.83, y: 44.29), controlPoint1: CGPoint(x: 28.14, y: 45.32), controlPoint2: CGPoint(x: 28.83, y: 44.84))
            fill105.addCurve(to: CGPoint(x: 28.84, y: 44.14), controlPoint1: CGPoint(x: 28.83, y: 44.24), controlPoint2: CGPoint(x: 28.83, y: 44.19))
            fill105.addLine(to: CGPoint(x: 33.49, y: 3.62))
            fill105.addCurve(to: CGPoint(x: 32.02, y: 2.65), controlPoint1: CGPoint(x: 33.45, y: 3.1), controlPoint2: CGPoint(x: 32.78, y: 2.65))
            fill105.addLine(to: CGPoint(x: 4.13, y: 2.65))
            fill105.addCurve(to: CGPoint(x: 2.65, y: 3.62), controlPoint1: CGPoint(x: 3.37, y: 2.65), controlPoint2: CGPoint(x: 2.7, y: 3.1))
            fill105.close()
            fill105.move(to: CGPoint(x: 27.35, y: 47.97))
            fill105.addLine(to: CGPoint(x: 8.8, y: 47.97))
            fill105.addCurve(to: CGPoint(x: 4.67, y: 44.38), controlPoint1: CGPoint(x: 6.55, y: 47.97), controlPoint2: CGPoint(x: 4.72, y: 46.36))
            fill105.addLine(to: CGPoint(x: 0.01, y: 3.82))
            fill105.addCurve(to: CGPoint(x: 0, y: 3.67), controlPoint1: CGPoint(x: 0, y: 3.77), controlPoint2: CGPoint(x: 0, y: 3.72))
            fill105.addCurve(to: CGPoint(x: 4.13, y: 0), controlPoint1: CGPoint(x: 0, y: 1.65), controlPoint2: CGPoint(x: 1.85, y: 0))
            fill105.addLine(to: CGPoint(x: 32.02, y: 0))
            fill105.addCurve(to: CGPoint(x: 36.15, y: 3.67), controlPoint1: CGPoint(x: 34.3, y: 0), controlPoint2: CGPoint(x: 36.15, y: 1.65))
            fill105.addCurve(to: CGPoint(x: 36.14, y: 3.82), controlPoint1: CGPoint(x: 36.15, y: 3.72), controlPoint2: CGPoint(x: 36.15, y: 3.77))
            fill105.addLine(to: CGPoint(x: 31.48, y: 44.38))
            fill105.addCurve(to: CGPoint(x: 27.35, y: 47.97), controlPoint1: CGPoint(x: 31.43, y: 46.36), controlPoint2: CGPoint(x: 29.6, y: 47.97))
            fill105.addLine(to: CGPoint(x: 27.35, y: 47.97))
            fill105.close()
            fill105.move(to: CGPoint(x: 27.35, y: 47.97))
            context.saveGState()
            context.translateBy(x: 304.83, y: 125.45)
            fill105.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill105.fill()
            context.restoreGState()
            
            /// Fill 106
            let fill106 = UIBezierPath()
            fill106.move(to: CGPoint(x: 35.52, y: 0))
            fill106.addLine(to: CGPoint(x: 32.7, y: 23.91))
            fill106.addLine(to: CGPoint(x: 2.82, y: 23.91))
            fill106.addLine(to: CGPoint.zero)
            fill106.addLine(to: CGPoint(x: 35.52, y: 0))
            context.saveGState()
            context.translateBy(x: 305.15, y: 137.68)
            fill106.usesEvenOddFillRule = true
            UIColor(hue: 0.458, saturation: 1, brightness: 0.645, alpha: 1).setFill()
            fill106.fill()
            context.restoreGState()
            
            /// Fill 107
            let fill107 = UIBezierPath()
            fill107.move(to: CGPoint(x: 5.33, y: 23.91))
            fill107.addLine(to: CGPoint(x: 32.85, y: 23.91))
            fill107.addLine(to: CGPoint(x: 35.36, y: 2.65))
            fill107.addLine(to: CGPoint(x: 2.82, y: 2.65))
            fill107.addLine(to: CGPoint(x: 5.33, y: 23.91))
            fill107.close()
            fill107.move(to: CGPoint(x: 34.03, y: 26.55))
            fill107.addLine(to: CGPoint(x: 4.15, y: 26.55))
            fill107.addCurve(to: CGPoint(x: 2.83, y: 25.39), controlPoint1: CGPoint(x: 3.48, y: 26.55), controlPoint2: CGPoint(x: 2.91, y: 26.05))
            fill107.addLine(to: CGPoint(x: 0.01, y: 1.48))
            fill107.addCurve(to: CGPoint(x: 0.34, y: 0.44), controlPoint1: CGPoint(x: -0.04, y: 1.1), controlPoint2: CGPoint(x: 0.08, y: 0.73))
            fill107.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0.59, y: 0.16), controlPoint2: CGPoint(x: 0.95, y: 0))
            fill107.addLine(to: CGPoint(x: 36.85, y: 0))
            fill107.addCurve(to: CGPoint(x: 37.84, y: 0.44), controlPoint1: CGPoint(x: 37.22, y: 0), controlPoint2: CGPoint(x: 37.58, y: 0.16))
            fill107.addCurve(to: CGPoint(x: 38.16, y: 1.48), controlPoint1: CGPoint(x: 38.09, y: 0.73), controlPoint2: CGPoint(x: 38.21, y: 1.1))
            fill107.addLine(to: CGPoint(x: 35.34, y: 25.39))
            fill107.addCurve(to: CGPoint(x: 34.03, y: 26.55), controlPoint1: CGPoint(x: 35.26, y: 26.05), controlPoint2: CGPoint(x: 34.7, y: 26.55))
            fill107.addLine(to: CGPoint(x: 34.03, y: 26.55))
            fill107.close()
            fill107.move(to: CGPoint(x: 34.03, y: 26.55))
            context.saveGState()
            context.translateBy(x: 303.82, y: 136.35)
            fill107.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill107.fill()
            context.restoreGState()
            
            /// Fill 108
            let fill108 = UIBezierPath()
            fill108.move(to: CGPoint(x: 34.2, y: 6.88))
            fill108.addLine(to: CGPoint(x: 0, y: 6.88))
            fill108.addLine(to: CGPoint(x: 1.87, y: 0))
            fill108.addLine(to: CGPoint(x: 32.33, y: 0))
            fill108.addLine(to: CGPoint(x: 34.2, y: 6.88))
            context.saveGState()
            context.translateBy(x: 305.69, y: 119.47)
            fill108.usesEvenOddFillRule = true
            UIColor(hue: 0.053, saturation: 0.447, brightness: 0.695, alpha: 1).setFill()
            fill108.fill()
            context.restoreGState()
            
            /// Fill 109
            let fill109 = UIBezierPath()
            fill109.move(to: CGPoint(x: 3.06, y: 6.88))
            fill109.addLine(to: CGPoint(x: 33.8, y: 6.88))
            fill109.addLine(to: CGPoint(x: 32.65, y: 2.65))
            fill109.addLine(to: CGPoint(x: 4.21, y: 2.65))
            fill109.addLine(to: CGPoint(x: 3.06, y: 6.88))
            fill109.close()
            fill109.move(to: CGPoint(x: 35.53, y: 9.53))
            fill109.addLine(to: CGPoint(x: 35.53, y: 9.53))
            fill109.addLine(to: CGPoint(x: 1.33, y: 9.53))
            fill109.addCurve(to: CGPoint(x: 0.27, y: 9.01), controlPoint1: CGPoint(x: 0.91, y: 9.53), controlPoint2: CGPoint(x: 0.52, y: 9.34))
            fill109.addCurve(to: CGPoint(x: 0.05, y: 7.86), controlPoint1: CGPoint(x: 0.02, y: 8.68), controlPoint2: CGPoint(x: -0.06, y: 8.26))
            fill109.addLine(to: CGPoint(x: 1.92, y: 0.98))
            fill109.addCurve(to: CGPoint(x: 3.19, y: 0), controlPoint1: CGPoint(x: 2.07, y: 0.4), controlPoint2: CGPoint(x: 2.6, y: 0))
            fill109.addLine(to: CGPoint(x: 33.66, y: 0))
            fill109.addCurve(to: CGPoint(x: 34.94, y: 0.98), controlPoint1: CGPoint(x: 34.26, y: 0), controlPoint2: CGPoint(x: 34.78, y: 0.4))
            fill109.addLine(to: CGPoint(x: 36.78, y: 7.75))
            fill109.addCurve(to: CGPoint(x: 36.86, y: 8.21), controlPoint1: CGPoint(x: 36.83, y: 7.9), controlPoint2: CGPoint(x: 36.86, y: 8.05))
            fill109.addCurve(to: CGPoint(x: 35.53, y: 9.53), controlPoint1: CGPoint(x: 36.86, y: 8.94), controlPoint2: CGPoint(x: 36.26, y: 9.53))
            fill109.addLine(to: CGPoint(x: 35.53, y: 9.53))
            fill109.close()
            fill109.move(to: CGPoint(x: 35.53, y: 9.53))
            context.saveGState()
            context.translateBy(x: 304.36, y: 118.15)
            fill109.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill109.fill()
            context.restoreGState()
            
            /// Fill 110
            let fill110 = UIBezierPath()
            fill110.move(to: CGPoint(x: 10.34, y: 5.17))
            fill110.addCurve(to: CGPoint(x: 5.17, y: 10.34), controlPoint1: CGPoint(x: 10.34, y: 8.02), controlPoint2: CGPoint(x: 8.03, y: 10.34))
            fill110.addCurve(to: CGPoint(x: 0, y: 5.17), controlPoint1: CGPoint(x: 2.32, y: 10.34), controlPoint2: CGPoint(x: 0, y: 8.02))
            fill110.addCurve(to: CGPoint(x: 5.17, y: 0), controlPoint1: CGPoint(x: 0, y: 2.31), controlPoint2: CGPoint(x: 2.32, y: 0))
            fill110.addCurve(to: CGPoint(x: 10.34, y: 5.17), controlPoint1: CGPoint(x: 8.03, y: 0), controlPoint2: CGPoint(x: 10.34, y: 2.31))
            context.saveGState()
            context.translateBy(x: 317.83, y: 144.2)
            fill110.usesEvenOddFillRule = true
            UIColor(hue: 0.111, saturation: 0.004, brightness: 1, alpha: 1).setFill()
            fill110.fill()
            context.restoreGState()
            
            /// Fill 111
            let fill111 = UIBezierPath()
            fill111.move(to: CGPoint(x: 6.5, y: 2.65))
            fill111.addCurve(to: CGPoint(x: 2.65, y: 6.49), controlPoint1: CGPoint(x: 4.38, y: 2.65), controlPoint2: CGPoint(x: 2.65, y: 4.37))
            fill111.addCurve(to: CGPoint(x: 6.5, y: 10.34), controlPoint1: CGPoint(x: 2.65, y: 8.61), controlPoint2: CGPoint(x: 4.38, y: 10.34))
            fill111.addCurve(to: CGPoint(x: 10.34, y: 6.49), controlPoint1: CGPoint(x: 8.62, y: 10.34), controlPoint2: CGPoint(x: 10.34, y: 8.61))
            fill111.addCurve(to: CGPoint(x: 6.5, y: 2.65), controlPoint1: CGPoint(x: 10.34, y: 4.37), controlPoint2: CGPoint(x: 8.62, y: 2.65))
            fill111.close()
            fill111.move(to: CGPoint(x: 6.5, y: 12.98))
            fill111.addCurve(to: CGPoint(x: 0, y: 6.49), controlPoint1: CGPoint(x: 2.91, y: 12.98), controlPoint2: CGPoint(x: 0, y: 10.07))
            fill111.addCurve(to: CGPoint(x: 6.5, y: 0), controlPoint1: CGPoint(x: 0, y: 2.91), controlPoint2: CGPoint(x: 2.91, y: 0))
            fill111.addCurve(to: CGPoint(x: 12.99, y: 6.49), controlPoint1: CGPoint(x: 10.08, y: 0), controlPoint2: CGPoint(x: 12.99, y: 2.91))
            fill111.addCurve(to: CGPoint(x: 6.5, y: 12.98), controlPoint1: CGPoint(x: 12.99, y: 10.07), controlPoint2: CGPoint(x: 10.08, y: 12.98))
            fill111.addLine(to: CGPoint(x: 6.5, y: 12.98))
            fill111.close()
            fill111.move(to: CGPoint(x: 6.5, y: 12.98))
            context.saveGState()
            context.translateBy(x: 316.5, y: 142.88)
            fill111.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill111.fill()
            context.restoreGState()
            
            /// Fill 112
            let fill112 = UIBezierPath()
            fill112.move(to: CGPoint(x: 0, y: 4.76))
            fill112.addLine(to: CGPoint(x: 37.7, y: 4.76))
            fill112.addLine(to: CGPoint(x: 37.7, y: 0))
            fill112.addLine(to: CGPoint.zero)
            fill112.addLine(to: CGPoint(x: 0, y: 4.76))
            fill112.close()
            fill112.move(to: CGPoint(x: 0, y: 4.76))
            context.saveGState()
            context.translateBy(x: 303.94, y: 124.14)
            fill112.usesEvenOddFillRule = true
            UIColor(hue: 0.05, saturation: 0.328, brightness: 0.765, alpha: 1).setFill()
            fill112.fill()
            context.restoreGState()
            
            /// Fill 113
            let fill113 = UIBezierPath()
            fill113.move(to: CGPoint(x: 2.65, y: 4.76))
            fill113.addLine(to: CGPoint(x: 37.7, y: 4.76))
            fill113.addLine(to: CGPoint(x: 37.7, y: 2.65))
            fill113.addLine(to: CGPoint(x: 2.65, y: 2.65))
            fill113.addLine(to: CGPoint(x: 2.65, y: 4.76))
            fill113.close()
            fill113.move(to: CGPoint(x: 39.03, y: 7.41))
            fill113.addLine(to: CGPoint(x: 1.33, y: 7.41))
            fill113.addCurve(to: CGPoint(x: 0, y: 6.08), controlPoint1: CGPoint(x: 0.59, y: 7.41), controlPoint2: CGPoint(x: 0, y: 6.81))
            fill113.addLine(to: CGPoint(x: 0, y: 1.32))
            fill113.addCurve(to: CGPoint(x: 1.33, y: 0), controlPoint1: CGPoint(x: 0, y: 0.59), controlPoint2: CGPoint(x: 0.59, y: 0))
            fill113.addLine(to: CGPoint(x: 39.03, y: 0))
            fill113.addCurve(to: CGPoint(x: 40.35, y: 1.32), controlPoint1: CGPoint(x: 39.76, y: 0), controlPoint2: CGPoint(x: 40.35, y: 0.59))
            fill113.addLine(to: CGPoint(x: 40.35, y: 6.08))
            fill113.addCurve(to: CGPoint(x: 39.03, y: 7.41), controlPoint1: CGPoint(x: 40.35, y: 6.81), controlPoint2: CGPoint(x: 39.76, y: 7.41))
            fill113.addLine(to: CGPoint(x: 39.03, y: 7.41))
            fill113.close()
            fill113.move(to: CGPoint(x: 39.03, y: 7.41))
            context.saveGState()
            context.translateBy(x: 302.61, y: 122.81)
            fill113.usesEvenOddFillRule = true
            UIColor(hue: 0.629, saturation: 0.6, brightness: 0.342, alpha: 1).setFill()
            fill113.fill()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// Group 3
        context.saveGState()
        context.setShadow(
            offset: CGSize(width: 0 * resizedShadowScale, height: 4 * resizedShadowScale),
            blur: 10 * resizedShadowScale,
            color: UIColor(white: 0, alpha: 0.11).cgColor)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        do {
            context.translateBy(x: 16, y: 71)
            
            /// Combined Shape
            let combinedShape = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: 344, height: 355), cornerRadius: 9)
            context.saveGState()
            UIColor.white.setFill()
            combinedShape.fill()
            context.restoreGState()
            
            /// Group
            do {
                context.saveGState()
                context.translateBy(x: 11, y: 199)
                
                /// Line
                let line = UIBezierPath()
                line.move(to: CGPoint(x: 0, y: 1))
                line.addLine(to: CGPoint(x: 100, y: 1.36))
                context.saveGState()
                context.translateBy(x: 0, y: 43.5)
                line.lineCapStyle = .square
                line.lineWidth = 1
                UIColor(white: 0.592, alpha: 1).setStroke()
                line.stroke()
                context.restoreGState()
                
                /// Departure Time
                let departureTime = NSMutableAttributedString(string: "Departure Time")
                departureTime.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 14)!, range: NSRange(location: 0, length: departureTime.length))
                departureTime.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.237, alpha: 1), range: NSRange(location: 0, length: departureTime.length))
                departureTime.addAttribute(NSKernAttributeName, value: -0.31, range: NSRange(location: 0, length: departureTime.length))
                context.saveGState()
                context.setAlpha(0.7)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    departureTime.draw(at: CGPoint.zero)
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
//                /// select
//                do {
//                    context.saveGState()
//                    context.translateBy(x: 0, y: 17)
//                    
//                    /// Group 2
//                    context.saveGState()
//                    context.setAlpha(0.8)
//                    context.beginTransparencyLayer(auxiliaryInfo: nil)
//                    do {
//                        
//                        /// Time
//                        let time = NSMutableAttributedString(string: "Time")
//                        time.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 10)!, range: NSRange(location: 0, length: time.length))
//                        time.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.278, alpha: 1), range: NSRange(location: 0, length: time.length))
//                        time.addAttribute(NSKernAttributeName, value: -0.22, range: NSRange(location: 0, length: time.length))
//                        context.saveGState()
//                        time.draw(at: CGPoint(x: 0, y: 11))
//                        context.restoreGState()
//                        
//                        /// Select
//                        let select = NSMutableAttributedString(string: "Select")
//                        select.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 10)!, range: NSRange(location: 0, length: select.length))
//                        select.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.278, alpha: 1), range: NSRange(location: 0, length: select.length))
//                        select.addAttribute(NSKernAttributeName, value: -0.22, range: NSRange(location: 0, length: select.length))
//                        context.saveGState()
//                        select.draw(at: CGPoint.zero)
//                        context.restoreGState()
//                    }
//                    context.endTransparencyLayer()
//                    context.restoreGState()
//                    
//                    context.restoreGState()
//                }
                
                context.restoreGState()
            }
            
            /// Group 10
            do {
                context.saveGState()
                context.translateBy(x: 47, y: 280)
                
                /// Search Button
                rectangle2 = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: 250, height: 51), cornerRadius: 28)
                context.saveGState()
                context.saveGState()
                context.beginPath()
                context.addPath(rectangle2.cgPath)
                context.addRect(rectangle2.bounds.insetBy(dx: -12, dy: -17))
                context.clip(using: .evenOdd)
                context.translateBy(x: -263, y: 0)
                do {
                    let baseZero = context.convertToDeviceSpace(CGPoint.zero).applying(baseTransform)
                    let baseOne = context.convertToDeviceSpace(CGPoint(x: 1, y: 1)).applying(baseTransform)
                    let baseOffset = context.convertToDeviceSpace(CGPoint(x: 263, y: 5)).applying(baseTransform)
                    let shadowOffset = CGSize(width: baseOffset.x - baseZero.x, height: baseOffset.y - baseZero.y)
                    let shadowBlur: CGFloat = 12 * min(baseOne.x - baseZero.x, baseOne.y - baseZero.y)
                    context.setShadow(offset: shadowOffset, blur: shadowBlur, color: UIColor(hue: 0.714, saturation: 0.515, brightness: 0.945, alpha: 0.28).cgColor)
                }
                UIColor.black.setFill()
                rectangle2.fill()
                context.restoreGState()
                UIColor(hue: 0.713, saturation: 0.515, brightness: 0.946, alpha: 1).setFill()
                rectangle2.fill()
                context.restoreGState()
                
                /// Search
                let search = NSMutableAttributedString(string: "Search")
                search.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 25)!, range: NSRange(location: 0, length: search.length))
                search.addAttribute(NSForegroundColorAttributeName, value: UIColor.white, range: NSRange(location: 0, length: search.length))
                search.addAttribute(NSKernAttributeName, value: -0.43, range: NSRange(location: 0, length: search.length))
                context.saveGState()
                search.draw(at: CGPoint(x: 88, y: 11))
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// Group
            do {
                context.saveGState()
                context.translateBy(x: 199, y: 199)
                
                /// Line
                let line2 = UIBezierPath()
                line2.move(to: CGPoint(x: 0, y: 1))
                line2.addLine(to: CGPoint(x: 100, y: 1.36))
                context.saveGState()
                context.translateBy(x: 1, y: 43.5)
                line2.lineCapStyle = .square
                line2.lineWidth = 1
                UIColor(white: 0.592, alpha: 1).setStroke()
                line2.stroke()
                context.restoreGState()
                
                /// Arrival Time
                let arrivalTime = NSMutableAttributedString(string: "Arrival Time\n")
                arrivalTime.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 14)!, range: NSRange(location: 0, length: arrivalTime.length))
                arrivalTime.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.237, alpha: 1), range: NSRange(location: 0, length: arrivalTime.length))
                arrivalTime.addAttribute(NSKernAttributeName, value: -0.31, range: NSRange(location: 0, length: arrivalTime.length))
                context.saveGState()
                context.setAlpha(0.7)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    arrivalTime.draw(at: CGPoint(x: 1, y: 0))
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
                /// Group 4
                do {
                    context.saveGState()
                    context.translateBy(x: 0, y: 17)
                    
                    // Empty.
                    
                    context.restoreGState()
                }
                
//                /// select
//                do {
//                    context.saveGState()
//                    context.translateBy(x: 1, y: 17)
//                    
//                    /// Group 2
//                    context.saveGState()
//                    context.setAlpha(0.8)
//                    context.beginTransparencyLayer(auxiliaryInfo: nil)
//                    do {
//                        
//                        /// Time
//                        let time2 = NSMutableAttributedString(string: "Time")
//                        time2.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 10)!, range: NSRange(location: 0, length: time2.length))
//                        time2.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.278, alpha: 1), range: NSRange(location: 0, length: time2.length))
//                        time2.addAttribute(NSKernAttributeName, value: -0.22, range: NSRange(location: 0, length: time2.length))
//                        context.saveGState()
//                        time2.draw(at: CGPoint(x: 0, y: 11))
//                        context.restoreGState()
//                        
//                        /// Select
//                        let select3 = NSMutableAttributedString(string: "Select")
//                        select3.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 10)!, range: NSRange(location: 0, length: select3.length))
//                        select3.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.278, alpha: 1), range: NSRange(location: 0, length: select3.length))
//                        select3.addAttribute(NSKernAttributeName, value: -0.22, range: NSRange(location: 0, length: select3.length))
//                        context.saveGState()
//                        select3.draw(at: CGPoint.zero)
//                        context.restoreGState()
//                    }
//                    context.endTransparencyLayer()
//                    context.restoreGState()
//                    
//                    context.restoreGState()
//                }
                
                context.restoreGState()
            }
            
            /// Group
            do {
                context.saveGState()
                context.translateBy(x: 11, y: 94)
                
                /// Line
                let line3 = UIBezierPath()
                line3.move(to: CGPoint(x: 0, y: 1))
                line3.addLine(to: CGPoint(x: 290, y: 1))
                context.saveGState()
                context.translateBy(x: 0.5, y: 57.5)
                line3.lineCapStyle = .square
                line3.lineWidth = 1
                UIColor(white: 0.592, alpha: 1).setStroke()
                line3.stroke()
                context.restoreGState()
                
                /// To
                let to = NSMutableAttributedString(string: "To")
                to.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 14)!, range: NSRange(location: 0, length: to.length))
                to.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.237, alpha: 1), range: NSRange(location: 0, length: to.length))
                to.addAttribute(NSKernAttributeName, value: -0.31, range: NSRange(location: 0, length: to.length))
                context.saveGState()
                context.setAlpha(0.7)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    to.draw(at: CGPoint.zero)
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
//                /// SELECT
//                do {
//                    context.saveGState()
//                    context.translateBy(x: 0, y: 25)
//                    
//                    /// Select Destination
//                    let selectDestination = NSMutableAttributedString(string: "Select Destination")
//                    selectDestination.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 20)!, range: NSRange(location: 0, length: selectDestination.length))
//                    selectDestination.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.278, alpha: 1), range: NSRange(location: 0, length: selectDestination.length))
//                    selectDestination.addAttribute(NSKernAttributeName, value: -0.44, range: NSRange(location: 0, length: selectDestination.length))
//                    context.saveGState()
//                    context.setAlpha(0.8)
//                    context.beginTransparencyLayer(auxiliaryInfo: nil)
//                    do {
//                        selectDestination.draw(at: CGPoint.zero)
//                    }
//                    context.endTransparencyLayer()
//                    context.restoreGState()
//                    
//                    context.restoreGState()
//                }
                
                context.restoreGState()
            }
            
            /// Group
            do {
                context.saveGState()
                context.translateBy(x: 11, y: 12)
                
                /// Line
                let line4 = UIBezierPath()
                line4.move(to: CGPoint(x: 0, y: 1))
                line4.addLine(to: CGPoint(x: 290, y: 1))
                context.saveGState()
                context.translateBy(x: 0.5, y: 57.5)
                line4.lineCapStyle = .square
                line4.lineWidth = 1
                UIColor(white: 0.592, alpha: 1).setStroke()
                line4.stroke()
                context.restoreGState()
                
                /// From
                let from = NSMutableAttributedString(string: "From")
                from.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 14)!, range: NSRange(location: 0, length: from.length))
                from.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.237, alpha: 1), range: NSRange(location: 0, length: from.length))
                from.addAttribute(NSKernAttributeName, value: -0.31, range: NSRange(location: 0, length: from.length))
                context.saveGState()
                context.setAlpha(0.7)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    from.draw(at: CGPoint.zero)
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
//                /// SELECT
//                do {
//                    context.saveGState()
//                    context.translateBy(x: 0, y: 25)
//                    
//                    /// Select Location
//                    let selectDestination2 = NSMutableAttributedString(string: "Select Location")
//                    selectDestination2.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 20)!, range: NSRange(location: 0, length: selectDestination2.length))
//                    selectDestination2.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.278, alpha: 1), range: NSRange(location: 0, length: selectDestination2.length))
//                    selectDestination2.addAttribute(NSKernAttributeName, value: -0.44, range: NSRange(location: 0, length: selectDestination2.length))
//                    context.saveGState()
//                    context.setAlpha(0.8)
//                    context.beginTransparencyLayer(auxiliaryInfo: nil)
//                    do {
//                        selectDestination2.draw(at: CGPoint.zero)
//                    }
//                    context.endTransparencyLayer()
//                    context.restoreGState()
//                    
//                    context.restoreGState()
//                }
                
                context.restoreGState()
            }
        }
        context.endTransparencyLayer()
        context.restoreGState()
        /// Group 8
        do {
            context.saveGState()
            context.translateBy(x: 133, y: 18)
            
            /// Flight Search
            let flightSearch = NSMutableAttributedString(string: "Plan a Trip")
            flightSearch.addAttribute(NSFontAttributeName, value: UIFont(name: ".AppleSystemUIFont", size: 19)!, range: NSRange(location: 0, length: flightSearch.length))
            flightSearch.addAttribute(NSForegroundColorAttributeName, value: UIColor(hue: 1, saturation: 0.954, brightness: 0.988, alpha: 1), range: NSRange(location: 0, length: flightSearch.length))
            flightSearch.addAttribute(NSKernAttributeName, value: -0.13, range: NSRange(location: 0, length: flightSearch.length))
            context.saveGState()
            context.setAlpha(0.6)
            context.beginTransparencyLayer(auxiliaryInfo: nil)
            do {
                flightSearch.draw(at: CGPoint.zero)
            }
            context.endTransparencyLayer()
            context.restoreGState()
            
            context.restoreGState()
        }
        /// OR
        let oR = NSMutableAttributedString(string: "OR")
        oR.addAttribute(NSFontAttributeName, value: UIFont(name: "Arial-BoldMT", size: 14)!, range: NSRange(location: 0, length: oR.length))
        oR.addAttribute(NSForegroundColorAttributeName, value: UIColor(white: 0.237, alpha: 1), range: NSRange(location: 0, length: oR.length))
        oR.addAttribute(NSKernAttributeName, value: -0.31, range: NSRange(location: 0, length: oR.length))
        context.saveGState()
        oR.draw(at: CGPoint(x: 161, y: 286))
        context.restoreGState()
        
        context.restoreGState()
    }
    
    
    //MARK: - Canvas Images
    
    /// Page 1
    
    class func imageOfSearch1() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 375, height: 630), false, 0)
        PlanATrip.drawSearch1()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    
    //MARK: - Resizing Behavior
    
    enum ResizingBehavior {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.
        
        func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }
            
            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)
            
            switch self {
            case .aspectFit:
                scales.width = min(scales.width, scales.height)
                scales.height = scales.width
            case .aspectFill:
                scales.width = max(scales.width, scales.height)
                scales.height = scales.width
            case .stretch:
                break
            case .center:
                scales.width = 1
                scales.height = 1
            }
            
            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
    
}
